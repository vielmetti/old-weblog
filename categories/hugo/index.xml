<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on Vacuum weblog from Edward Vielmetti</title>
    <link>http://vielmetti.github.io/categories/hugo/</link>
    <description>Recent content in Hugo on Vacuum weblog from Edward Vielmetti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Jul 2015 17:20:08 -0400</lastBuildDate>
    
	<atom:link href="http://vielmetti.github.io/categories/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Publishing from Hugo to Github Pages</title>
      <link>http://vielmetti.github.io/post/2015/2015-07-14-publishing-from-hugo-to-github-pages/</link>
      <pubDate>Tue, 14 Jul 2015 17:20:08 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-07-14-publishing-from-hugo-to-github-pages/</guid>
      <description>One of the challenges in getting things started is figuring out where the end product is going to live. Hugo has its own web server which is pretty nice, but since it generates static pages, the results can really go anywhere.
This tutorial goes through the process in excruciating detail
http://gohugo.io/tutorials/github-pages-blog/
but somehow fails to make it easy. What I&amp;rsquo;d like is a publishing workflow that just like the normal Hugo workflow puts things online instantly once they are built.</description>
    </item>
    
    <item>
      <title>converting typepad to hugo</title>
      <link>http://vielmetti.github.io/post/2015/2015-07-14-converting-typepad-to-hugo/</link>
      <pubDate>Tue, 14 Jul 2015 13:33:15 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-07-14-converting-typepad-to-hugo/</guid>
      <description>The task of the night was getting a few years worth of Typepad posts into Hugo.
My first step was to convert to Jekyll format, which I did using this typepad_to_jekyll Ruby gem:
https://github.com/koozie/typepad_to_jekyll
You then need to do a few things to get the Jekyll files exactly right for Hugo:
 Change the date format Rewrite the Categories Download and relink all of the images  Changing the format for &amp;ldquo;date&amp;rdquo; was a one-liner in perl with the -i (&amp;ldquo;edit in place&amp;rdquo;) flag.</description>
    </item>
    
    <item>
      <title>wow that is fast</title>
      <link>http://vielmetti.github.io/post/wow-that-is-fast/</link>
      <pubDate>Tue, 14 Jul 2015 03:25:43 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/wow-that-is-fast/</guid>
      <description>So 634 pages from my Github Gollum based Wiki markup all got imported into Hugo and it rendered all of them in 828 ms, or basically under a second to pull in everything I&amp;rsquo;ve ever written. Astonishingly fast.
Alas, those files while they are in Markdown are not really ready for direct import, since they have [[double brackets]] everywhere that get uglified. The other limiting factor is the date marker that&amp;rsquo;s not included with them so they all show up as January 1, 0001 which is funny the first few times and then not funny.</description>
    </item>
    
  </channel>
</rss>