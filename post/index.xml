<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post-rsses on Vacuum weblog from Edward Vielmetti</title>
    <link>http://vielmetti.github.io/post/index.xml</link>
    <description>Recent content in Post-rsses on Vacuum weblog from Edward Vielmetti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jan 9999 00:00:00 -0400</lastBuildDate>
    <atom:link href="http://vielmetti.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>About this weblog</title>
      <link>http://vielmetti.github.io/post/about-this-weblog/</link>
      <pubDate>Fri, 01 Jan 9999 00:00:00 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/about-this-weblog/</guid>
      <description>&lt;p&gt;Edward Vielmetti has been writing the Vacuum weblog
since 1999 from Ann Arbor, Michigan. The topics vary
widely, with over 2000 entries in the whole collection.&lt;/p&gt;

&lt;p&gt;In the interest of simplifying the presentation, some
parts of this collection are currently offline, and the
front page has some mix of meditation and detail.&lt;/p&gt;

&lt;p&gt;The current set of systems that are an area of focus -
and the places I draw from for inspiration on each -
are as follows.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://vielmetti.github.io/tags/writing&#34;&gt;Writing&lt;/a&gt;.
Self-reflective thoughts about producing a bunch
of work through the medium of this weblog, and through
other writing outlets that are less satisfying. Trying
as best I can to write more letters and postcards and
not spend as much time on instachirp.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://vielmetti.github.io/tags/radio&#34;&gt;Radio&lt;/a&gt;.
Software defined radio, listening to far-off stations,
operating 2 meter ham radio, various ways to listen to
baseball online, and the like all capture my attention.
One nice thing about radio is that you can listen to it
while doing something else.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://vielmetti.github.io/tags/rpi/&#34;&gt;Raspberry Pi&lt;/a&gt;. This little ARM based single board computer
is a launching point for small scale situated experimental
computing interfaces to the outside world. I&amp;rsquo;m running
the &lt;a href=&#34;http://blog.hypriot.com&#34;&gt;Hypriot&lt;/a&gt; distribution on my
systems, which provides infrastructure to run Docker.
Pis are cheap and cheerful, and the ARM chips they are
built from have applications all the way from disposable
embedded computers to data center scale power efficient compute farms.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://vielmetti.github.io/tags/docker&#34;&gt;Docker&lt;/a&gt;. This tool allows you to encapsulate system dependencies
so that even complex software can be launched and run
without going through an extensive installation process.
Run this on small systems like the Raspberry Pi, for development on OS X or Linux,
and on bare-metal servers like Packet. Container technology
and cluster technology are still changing rapidly, with
every new release offering new functions (and the risk of
a smattering of interesting new bugs).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Oblique strategies as a service</title>
      <link>http://vielmetti.github.io/post/2017/2017-W12-4-oblique-strategy-as-a-service/</link>
      <pubDate>Fri, 24 Mar 2017 11:30:00 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2017/2017-W12-4-oblique-strategy-as-a-service/</guid>
      <description>&lt;p&gt;In 1975, Brian Eno and Peter Schmidt collaborated on
a card deck of strategies for overcoming creative blocks.
This was produced in limited and somewhat varying editions,
and when it escaped into the computing world at slightly
later date, various electronic versions were produced
(including one in FORTRAN). &lt;a href=&#34;http://aprendizdetodo.com/toys/?item=20041208&#34;&gt;Prentiss Riddle noted&lt;/a&gt; some
of this history in 2004.&lt;/p&gt;

&lt;p&gt;The &amp;lsquo;oblique&amp;rsquo; code is simple; a file with strategies, one per line,
and a function to return a random line from that file.
There are lots of random line functions out there, including
the GNU &amp;ldquo;shuf&amp;rdquo; command, and various implementations done
purely in the Unix shell.&lt;/p&gt;

&lt;p&gt;In the tradition of exercising the card &amp;ldquo;Use an old idea&amp;rdquo;
I present to you &amp;ldquo;Oblique strategies as a service&amp;rdquo;,
implemented on Alex Ellis&amp;rsquo;s &amp;ldquo;Functions as a service&amp;rdquo; platform.
The short version of how to do this involves starting from
the &lt;a href=&#34;https://github.com/alexellis/faas&#34;&gt;Github repository&lt;/a&gt; and
installing it according to the blog post at
&lt;a href=&#34;http://blog.alexellis.io/functions-as-a-service/&#34;&gt;http://blog.alexellis.io/functions-as-a-service/&lt;/a&gt; . Bring up
the sample according to directions, then follow the discussion
at &lt;a href=&#34;https://github.com/alexellis/faas/issues/26&#34;&gt;https://github.com/alexellis/faas/issues/26&lt;/a&gt; to see how to
add a new function at runtime. At some point it boils down to&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% curl localhost:8080/system/functions -d &#39;
{&amp;quot;service&amp;quot;: &amp;quot;oblique&amp;quot;, &amp;quot;image&amp;quot;: &amp;quot;vielmetti/faas-oblique&amp;quot;, &amp;quot;envProcess&amp;quot;: &amp;quot;/usr/bin/oblique&amp;quot;, &amp;quot;network&amp;quot;: &amp;quot;func_functions&amp;quot;}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to instantiate the function, and then&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% curl -d &amp;quot;&amp;quot; localhost:8080/functions/oblique
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to call it.&lt;/p&gt;

&lt;p&gt;Alex&amp;rsquo;s system relies on a long-running process in each
containers, a so-called &amp;ldquo;watchdog&amp;rdquo; process that accepts
requests, handles input/output to the function through
the Go os/exec syscall, and marshalls requests.
The actual function can be really anything including
any command that communicates through stdio.&lt;/p&gt;

&lt;p&gt;Some related work:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amazon&amp;rsquo;s &amp;ldquo;Lambda&amp;rdquo; service&lt;/li&gt;
&lt;li&gt;Glider Lab&amp;rsquo;s &amp;ldquo;cmd.io&amp;rdquo;, &amp;ldquo;commands as a service&amp;rdquo;; see &lt;a href=&#34;http://gliderlabs.com/devlog/2016/announcing-cmd-io/&#34;&gt;announcing cmd.io&lt;/a&gt;, 2016 build on top of ssh&lt;/li&gt;
&lt;li&gt;Ben Firshman&amp;rsquo;s &amp;ldquo;Funker&amp;rdquo;, Functions as Docker containers; see &lt;a href=&#34;https://github.com/bfirsh/funker&#34;&gt;Funker repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have this running successfully on my Mac, in Docker 17.03.1-ce-rc1-mac3
(15924) on the &amp;ldquo;edge&amp;rdquo; release channel. Performance is
on par with a local invocation of the same command.&lt;/p&gt;

&lt;p&gt;Next steps? Why of course, port Functions as a Service to
ARMv8. It&amp;rsquo;s already in the midst of being set up for ARM-based
Raspberry Pi systems, so the portability work has been
isolated. Follow the issue at &lt;a href=&#34;https://github.com/alexellis/faas/issues/27&#34;&gt;https://github.com/alexellis/faas/issues/27&lt;/a&gt;
to see where we are going with that.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Templated issue reporting in Github</title>
      <link>http://vielmetti.github.io/post/2017/2017-W11-4-issue-reporting/</link>
      <pubDate>Fri, 17 Mar 2017 09:00:00 +0000</pubDate>
      
      <guid>http://vielmetti.github.io/post/2017/2017-W11-4-issue-reporting/</guid>
      <description>&lt;p&gt;A well-managed software project will inevitably have
issues come up that need discussion and resolution. These
might be out-and-out bugs, but more often than not they
are also difficulties that people have getting started
running something complex, or issues that arise when
building for an environment that is not the same as what
the developers have experienced.&lt;/p&gt;

&lt;p&gt;The best projects I&amp;rsquo;ve seen have used the ability for
Github to provide a template for the issue report. Rather
than getting a blank page to type in your problem,
you are gently guided by an already filled out page
that prompts you with questions. Think of it as a simple
checklist for reporting, as there are many things that
someone might write, but only a few things that you really want to see.&lt;/p&gt;

&lt;p&gt;The most useful and relevant pair of questions that I like
to see are &amp;ldquo;What did you expect to see&amp;rdquo; and &amp;ldquo;What did you
actually see&amp;rdquo;. Figuring out the expected future state of
the system from someone else&amp;rsquo;s point of view can be a
challenge, and a good prompt allows people to express what
they would like to see happen even if they don&amp;rsquo;t really
understand how the system really works.&lt;/p&gt;

&lt;p&gt;Github&amp;rsquo;s mechanism for handling templated issue and
pull request is &lt;a href=&#34;https://github.com/blog/2111-issue-and-pull-request-templates&#34;&gt;written up nicely on their blog&lt;/a&gt;.
In addition, you might like Tal Ater&amp;rsquo;s
&lt;a href=&#34;https://www.talater.com/open-source-templates/#/&#34;&gt;choose your own adventure&lt;/a&gt;
decision tree to help you sort out what kind of
template you might like.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The first mailbox is simply labeled issues (&amp;ldquo;as if I don&amp;rsquo;t have enough of my own to deal with&amp;rdquo;, you think to yourself).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As if!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DTE power outage is worst in company history due to high winds</title>
      <link>http://vielmetti.github.io/post/2017/2017-W10-4-dte-power-outage/</link>
      <pubDate>Thu, 09 Mar 2017 14:30:00 -0500</pubDate>
      
      <guid>http://vielmetti.github.io/post/2017/2017-W10-4-dte-power-outage/</guid>
      <description>&lt;p&gt;High winds hit southeastern Michigan on Wednesday, March 8 2017.
As a result, many DTE customers lost power. Exact numbers are
hard to come by, but DTE&amp;rsquo;s estimate is that about 800,000 customers
were affected, making this the worst storm in company history.&lt;/p&gt;

&lt;p&gt;Even before the peak of the storm, the DTE infrastructure for
notifying customers of outage status and gathering incident
information from its customers failed. DTE&amp;rsquo;s web site was down
for the better part of Wednesdsay, and when it came back up it
only had the bare minimum of information, with no outage
restoration times available and no public-facing map detail
of outages.&lt;/p&gt;

&lt;p&gt;The tendency for utility companies to get caught flat-footed when
extraordinary events tax their infrastructure is sadly all too
common. Only four years ago a major ice storm hit DTE, with
similar chaos in restoration.&lt;/p&gt;

&lt;p&gt;If you are looking for a broad overall picture of the DTE outage
situation, the best source for news is the
&lt;a href=&#34;https://twitter.com/dte_energy&#34;&gt;DTE Twitter account&lt;/a&gt;, and the
best map regularly available is their old outage by zip product
at &lt;a href=&#34;http://www.dteenergy.com/map/zipCodeOutageMap.pdf&#34;&gt;http://www.dteenergy.com/map/zipCodeOutageMap.pdf&lt;/a&gt; updated every
30 minutes. Fine grained details about individual outages are
not available Thursday afternoon, but DTE is estimating that 90%
of customers will be restored by Sunday.&lt;/p&gt;

&lt;p&gt;Here at home we were lucky with only a few blips. The big branches
in front of the house that would have certainly come crashing down
in this storm had been trimmed by the city a few months previous.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>February 28, 2017 AWS S3 downtime</title>
      <link>http://vielmetti.github.io/post/2017/2017-W09-3-aws-s3-downtime/</link>
      <pubDate>Wed, 01 Mar 2017 10:00:00 -0500</pubDate>
      
      <guid>http://vielmetti.github.io/post/2017/2017-W09-3-aws-s3-downtime/</guid>
      <description>&lt;p&gt;Amazon Web Services had downtime yesterday. Their
S3 storage service had what was described as elevated
error rates in the US-East zone, and as a result failures
started in other AWS services in US-East that depended
on S3.&lt;/p&gt;

&lt;p&gt;The failures were reminiscent of the
&lt;a href=&#34;http://vielmetti.github.io/post/2015/2015-09-20-aws-dynamodb-downtime-sunday-am/&#34;&gt;DynamoDB downtime of September 20, 2015&lt;/a&gt;,
in that seemingly unrelated services share a common failure
mode because of unforeseen interdependencies.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A distributed system is one in which the failure of a computer you didn’t even know existed can render your own computer unusable. Leslie Lamport, 1987&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The current &lt;a href=&#34;http://www.techmeme.com/170228/p20#a170228p20&#34;&gt;Techmeme roundup&lt;/a&gt;
has a good summary of the impacts on the net. Notably,
Twitter was unaffected, but some elements of Slack like
file sharing failed to work. And crucially Amazon&amp;rsquo;s own
ability to communicate with its many customers was the
first system to be noticably affected; their status page
showed all green checkmarks for more than an hour after
the problem was noticed, with the explanation coming that
the status page was itself dependent on services that were
down.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The dashboard not changing color is related to S3 issue.  See the banner at the top of the dashboard for updates.&lt;/p&gt;&amp;mdash; Amazon Web Services (@awscloud) &lt;a href=&#34;https://twitter.com/awscloud/status/836656664635846656&#34;&gt;February 28, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Some news media sites were also down or running
in impaired service, prompting the
Associated Press wire service to use Facebook to issue
its news story about the AWS outage.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Amazon Cloud server problems affecting the &lt;a href=&#34;https://twitter.com/AP&#34;&gt;@AP&lt;/a&gt; which is now posting some of its content to its Facebook page &lt;a href=&#34;https://t.co/MQZrMKOQfv&#34;&gt;https://t.co/MQZrMKOQfv&lt;/a&gt; &lt;a href=&#34;https://t.co/k7kPTX8m9k&#34;&gt;pic.twitter.com/k7kPTX8m9k&lt;/a&gt;&lt;/p&gt;&amp;mdash; Oliver Darcy (@oliverdarcy) &lt;a href=&#34;https://twitter.com/oliverdarcy/status/836665007408578560&#34;&gt;February 28, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dogfooding</title>
      <link>http://vielmetti.github.io/post/2017/2017-W08-4-dogfooding/</link>
      <pubDate>Thu, 23 Feb 2017 00:01:00 -0500</pubDate>
      
      <guid>http://vielmetti.github.io/post/2017/2017-W08-4-dogfooding/</guid>
      <description>&lt;p&gt;To &amp;ldquo;dogfood&amp;rdquo; comes from the phrase &amp;ldquo;to eat your own dogfood&amp;rdquo;,
giving the sense that you are not only producing a product
but also consuming it as well. This is intended to show that
you care so much about your customers success in using that
product that you are willing to use it the way they are
intended to use it.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Dogfooding&amp;rdquo; is thus shorthand for actually depending
on something that you make yourself for sale.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Dude, they should have spent more time dogfooding that app!&amp;rdquo;
&lt;a href=&#34;https://newrepublic.com/article/115349/dogfooding-tech-slang-working-out-glitches&#34;&gt;The New Republic&lt;/a&gt;
has a good take on the phrase.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Every day</title>
      <link>http://vielmetti.github.io/post/2017/2017-W08-3-every-day/</link>
      <pubDate>Wed, 22 Feb 2017 00:00:01 -0500</pubDate>
      
      <guid>http://vielmetti.github.io/post/2017/2017-W08-3-every-day/</guid>
      <description>&lt;p&gt;Once upon a time I had a daily deadline to write 500 words. Anything
was fair game as long as it was spelled correctly and included the
two words &amp;ldquo;Ann Arbor&amp;rdquo; prominently in the lead paragraph. Those days
are gone, but the memory of them reminds me of just how much hard work
it is to have something new to say every day that&amp;rsquo;s worthy of publication.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s a certain rhythm to writing every day. I appreciate it for
what it requires of you, that daily dose of composing yourself to the
point of putting something down on paper that you&amp;rsquo;re willing to review the
next day and not run shrieking from in horror.&lt;/p&gt;

&lt;p&gt;One of the things I&amp;rsquo;ve learned from blogging for a while is that
not everything that gets written down and published needs to stay
published forever. The every day publication doesn&amp;rsquo;t need to be
a permanent totem. It can live for a few days or a few weeks and
then silently disappear, leaving room for something that matters more
or that&amp;rsquo;s more on topic for some value of topic that you want to
present yourself as.&lt;/p&gt;

&lt;p&gt;Still I write. It&amp;rsquo;s hard to, but it&amp;rsquo;s also hard not to, and the
only way to get a few good words on the page is to produce a lot
of words and then be selective about what to keep around.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Abandoning analytics</title>
      <link>http://vielmetti.github.io/post/2017/2017-W08-2-abandoning-analytics/</link>
      <pubDate>Tue, 21 Feb 2017 00:00:01 -0500</pubDate>
      
      <guid>http://vielmetti.github.io/post/2017/2017-W08-2-abandoning-analytics/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve stopped for the most part watching and caring about
how many people view the various bits of writing I do.&lt;/p&gt;

&lt;p&gt;The analytical tools out there for measuring
the net have their primary impetus the selling of advertising,
and as such they have slowly but surely morphed to be less
and less useful for the discovery of non-commerical intent.&lt;/p&gt;

&lt;p&gt;It used to be that Google Analytics would tell you the
exact search terms that someone used to get to your page.
That&amp;rsquo;s gone now, unless you&amp;rsquo;re buying ad keywords. Every
system still gives raw page counts, but who cares about
eyeballs if you don&amp;rsquo;t know what they are focusing on?&lt;/p&gt;

&lt;p&gt;So the tactics of gathering and spreading attention have
to shift. Search is no longer the only currency of value,
and Facechat and Snapbook and Instachirp all proclaim
that they can measure engagement (and buy attention for
a low, low price). Be that as it may, it&amp;rsquo;s much less
important for me right now to collect lots of viewers.
Much more important for any given piece of work is exactly
who sees it, what they see in it, and whether it gets
past the initial flip, flip, flip through the infinite
net to have someone actually read to the bottom.&lt;/p&gt;

&lt;p&gt;I can pretty much predict what kind of Twitter behavior
generates a lot of page views - the tweetstorm! - but
who needs to do that all the time? Especially when
sometimes the goal is not to have a lot of random
people see something.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m writing this for you, you see; perhaps it&amp;rsquo;s just for
me, time-shifted into the future, looking backwards on
the day and understanding why measurement of readership
is not the only metric of interestingness.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>That new system smell</title>
      <link>http://vielmetti.github.io/post/2017/2017-W08-1-that-new-system-smell/</link>
      <pubDate>Mon, 20 Feb 2017 23:45:00 -0500</pubDate>
      
      <guid>http://vielmetti.github.io/post/2017/2017-W08-1-that-new-system-smell/</guid>
      <description>&lt;p&gt;That new system smell is what you smell when there&amp;rsquo;s a
brand new blank page and you have a ready approach to fill
it up. It&amp;rsquo;s the well-worked out technique just waiting for
some new set of tasks to tackle.&lt;/p&gt;

&lt;p&gt;Some times new systems present as &amp;ldquo;greenfield&amp;rdquo; opportunities,
with brand-new things to do that don&amp;rsquo;t require much in
the way of adherence to what&amp;rsquo;s gone on in the past.
Others show up as &amp;ldquo;brownfields&amp;rdquo;, with their fair share
of underground surprises and an acrid or pungent smell
of previous toxins or old tailings.&lt;/p&gt;

&lt;p&gt;Would it surprise you that I am writing this page on a
screen with no other words on it except this post? Strip
a problem down to its bare essence and hide all of the
gewgaws and gimcracks that enliven and distract from its
true nature.&lt;/p&gt;

&lt;p&gt;Musings on the language of Silicon Valley, the site of
a recent visit, and what sorts of language gets used
to talk about opportunity and to qualify the difference
between the world of incremental change versus the
world of radical reinvention.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Small wins</title>
      <link>http://vielmetti.github.io/post/2017/2017-W08-1-small-wins/</link>
      <pubDate>Mon, 20 Feb 2017 22:00:00 -0500</pubDate>
      
      <guid>http://vielmetti.github.io/post/2017/2017-W08-1-small-wins/</guid>
      <description>&lt;p&gt;I am reminded again of Karl Weick&amp;rsquo;s work on &amp;ldquo;small wins&amp;rdquo;,
the observation that large problems are so large that we
are overwhelmed just in thinking about them. It
can be incredibly powerful to have a series of small wins
that provide some momentum and that set you up for
increasing confidence and capability to tackle bigger issues.&lt;/p&gt;

&lt;p&gt;My small win of the moment is getting this blog post up,
reminding myself that once upon a time I met a writing
deadline every day for publication, and knowing that it&amp;rsquo;s
not necessary for every single post to be a big thing.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ISO 8601 date format and keeping track of weeks</title>
      <link>http://vielmetti.github.io/post/2017/2017-W03-5-iso-date-format/</link>
      <pubDate>Fri, 20 Jan 2017 09:00:00 -0500</pubDate>
      
      <guid>http://vielmetti.github.io/post/2017/2017-W03-5-iso-date-format/</guid>
      <description>&lt;p&gt;Warning: objects in calendar are closer than they appear.&lt;/p&gt;

&lt;p&gt;I can never keep track of the day of the month, it seems.
The watch on my wrist has a day marker, but it wants to have
a 31 day month, and when we have 30 or 28 day months the
day has to be manually adjusted. On the other hand, I have
a keen sense for what day of the week it is.&lt;/p&gt;

&lt;p&gt;The calendar for me is the ISO 8601 date format that supports calendaring
by day of week and week of the year. Today is 2017-W03-5,
which is conveniently and readily read as the Friday (5) of the
third week of 2017. There are rules from ISO 8601 about when
to start the year and what to do when weeks cross year boundaries,
but other than that small confusion it&amp;rsquo;s a very straightforward
calendar to use.&lt;/p&gt;

&lt;p&gt;The biggest bonus of it is just how readily you can plan for events
months in the future, because rather than thinking by month and
having to compute odd distances, you can think by weeks and simply
subtract.&lt;/p&gt;

&lt;p&gt;Some background: &lt;a href=&#34;http://www.staff.science.uu.nl/~gent0113/calendar/isocalendar.htm&#34;&gt;The Mathematics of the ISO 8601 Calendar&lt;/a&gt;,
R.H. van Gent 2005; &lt;a href=&#34;http://calendarswamp.blogspot.com&#34;&gt;Calendar Swamp&lt;/a&gt;,
a weblog by Scott Mace; and &lt;a href=&#34;https://www.calconnect.org&#34;&gt;CalConnect&lt;/a&gt;,
&amp;ldquo;The Calendaring and Scheduling Consortium&amp;rdquo;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Happy leap second (or mostly happy) and happy new year for 2017</title>
      <link>http://vielmetti.github.io/post/2017/2017-01-01-leap-second/</link>
      <pubDate>Sun, 01 Jan 2017 10:00:01 -0500</pubDate>
      
      <guid>http://vielmetti.github.io/post/2017/2017-01-01-leap-second/</guid>
      <description>

&lt;p&gt;Happy new year, and from a technology perspective, also happy leap second.&lt;/p&gt;

&lt;p&gt;[image: timekeeping for the leap second, from FSM Labs]
&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Here&amp;#39;s a complete picture of &lt;a href=&#34;https://twitter.com/hashtag/leapsecond?src=hash&#34;&gt;#leapsecond&lt;/a&gt; 2016. &lt;a href=&#34;https://t.co/DFp6XgnPig&#34;&gt;pic.twitter.com/DFp6XgnPig&lt;/a&gt;&lt;/p&gt;&amp;mdash; FSMLabs (@FSMLabs) &lt;a href=&#34;https://twitter.com/FSMLabs/status/815589123121618944&#34;&gt;January 1, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;As always, when there&amp;rsquo;s a leap second, people get a chance to debug their
timekeeping code. I guess if they happen frequently enough the code will
get better exercise and some bugs will be shaken out. Every time
some government messes with timekeeping, a small army of programmers gets
a few hours of work to adjust their systems, with some occasional unplanned downtime.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.fsmlabs.com&#34;&gt;FSMLabs&lt;/a&gt; watched the time change closely, and their image above
shows one peculiarity of reported time: Google&amp;rsquo;s NTP servers
returned a time that was up to half a second off, slowly creeping
out of sync with real time and then back into sync. They write
in a recap, &lt;a href=&#34;http://www.fsmlabs.com/news/2017/01/01/2leapsecondskew2016.html&#34;&gt;Leapsecond 2016 complete&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can see that Google starts its 20 hour leap-second “skew” 10 hours before the event and then skews back to the real time. Everyone else stays correct and then has a short error as they “leap” the second and then come back into correct time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;FSMLabs sells precision timekeeping equipment aimed at the financial
industry.&lt;/p&gt;

&lt;h3 id=&#34;leap-second-bugs&#34;&gt;Leap second bugs&lt;/h3&gt;

&lt;p&gt;The biggest issue identified was at Cloudflare, a distributed system
for web cachine.
&lt;a href=&#34;https://www.cloudflarestatus.com/incidents/1fczgjmknplp&#34;&gt;Some DNS lookups causing 5xx errors due to leap second bug&lt;/a&gt;
is the incident report.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Starting at 00:00 UTC on January 1, 2017, CNAME resolutions on some machines stopped working due to a bug triggered by the universal addition of one leap second, which affected both some authoritative DNS and origin DNS lookups, causing 5xx errors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the real world, the biggest reported issue that could be
suspicious was reported by the BBC as &lt;a href=&#34;http://www.bbc.com/news/uk-38482746&#34;&gt;London ambulance service hit by new year fault&lt;/a&gt;,
an account of computer system crashes at London Ambulance Service (LAS)
that are peculiarly synchronized with the appearance of the leap second.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is understood the computer system crashed, so calls had to be recorded by pen and paper for nearly five hours on one of the busiest nights of the year.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;systemd-is-eating-the-world&#34;&gt;Systemd is eating the world&lt;/h3&gt;

&lt;p&gt;Finally in timekeeping news and notes, the &lt;a href=&#34;https://coreos.com/os/docs/latest/configuring-date-and-timezone.html&#34;&gt;CoreOS help pages for timekeeping&lt;/a&gt;
illustrate the importance of keeping good time within a computing cluster.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;CoreOS clusters use NTP to synchronize the clocks of member nodes, and all machines start an NTP client at boot. CoreOS versions later than 681.0.0 use systemd-timesyncd(8) as the default NTP client. Earlier versions used ntpd(8). Use systemctl to check which service is running:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;ldquo;Systemd is eating the world&amp;rdquo;, and one of the things it has eaten is timekeeping.
One of the old CoreOS bugs, &lt;a href=&#34;https://github.com/coreos/bugs/issues/391&#34;&gt;systemd-timesyncd not as precise as ntpd&lt;/a&gt;,
reports that because of systemd-timesyncd&amp;rsquo;s less precise timekeeping there
are problems with Deis and Ceph. The bug report is from 2015 and was closed
due to inactivity, but if you have weird problems with CoreOS, Deis, and Ceph,
check your clocks!&lt;/p&gt;

&lt;h3 id=&#34;notes-and-references&#34;&gt;Notes and references&lt;/h3&gt;

&lt;p&gt;The future timekeeping bug that&amp;rsquo;s most likely to create worldwide
angst on the scale of Y2K is the
&lt;a href=&#34;https://en.wikipedia.org/wiki/Year_2038_problem&#34;&gt;Year 2038 problem&lt;/a&gt;,
which I&amp;rsquo;m counting on helping fix to fund my retirement.&lt;/p&gt;

&lt;p&gt;TimeAndDate News has a &lt;a href=&#34;https://www.timeanddate.com/news/time/&#34;&gt;time zone news&lt;/a&gt; feed,
which is useful to track worldwide adjustments to and from Daylight Savings Time.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://community.ntppool.org/t/leap-second-2017-status/59&#34;&gt;NTP Pool leap second 2017 status&lt;/a&gt;
reported that as of a few hours before the leap second, 3463 servers in the pool system were announcing the leap second and 933 were not.
&lt;a href=&#34;https://community.ntppool.org/users/ask/activity&#34;&gt;Ask Bjørn Hansen&lt;/a&gt; maintains the pool since 2005.&lt;/p&gt;

&lt;p&gt;Hail truechimers, exit falsetickers!&lt;/p&gt;

&lt;h4 id=&#34;updated-2017-01-01t16-07-00-to-add-fsm-labs-london-ambulance-notes-headers&#34;&gt;Updated 2017-01-01T16:07:00 to add FSM Labs, London Ambulance notes, headers&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Watching containers with Portainer and Sysdig</title>
      <link>http://vielmetti.github.io/post/2016/2016-12-28-watching-containers-with-portainer-and-sysdig/</link>
      <pubDate>Wed, 28 Dec 2016 23:30:00 -0500</pubDate>
      
      <guid>http://vielmetti.github.io/post/2016/2016-12-28-watching-containers-with-portainer-and-sysdig/</guid>
      <description>&lt;p&gt;[screen capture: csysdig running inside Portainer]&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Run &lt;a href=&#34;https://twitter.com/sysdig&#34;&gt;@sysdig&lt;/a&gt; CLI tool &amp;quot;csysdig&amp;quot; inside of a &lt;a href=&#34;https://twitter.com/portainerio&#34;&gt;@portainerio&lt;/a&gt; console window. Nice way to watch &lt;a href=&#34;https://twitter.com/docker&#34;&gt;@docker&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/coreos&#34;&gt;@coreos&lt;/a&gt; cc &lt;a href=&#34;https://twitter.com/mckartha&#34;&gt;@mckartha&lt;/a&gt; &lt;a href=&#34;https://t.co/hJGiHuJwKs&#34;&gt;pic.twitter.com/hJGiHuJwKs&lt;/a&gt;&lt;/p&gt;&amp;mdash; Edward Vielmetti (@vielmetti) &lt;a href=&#34;https://twitter.com/vielmetti/status/814320562294181888&#34;&gt;December 29, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The question to be answered is how to manage Docker containers - not
just how to get them running, but also how to poke inside them while
they are running to see what they are doing and make sure that you
can make sense of what is happening while you develop or run in production.&lt;/p&gt;

&lt;p&gt;At &lt;a href=&#34;http://vielmetti.github.io/post/2016/2016-12-19-tectonic-2016-trip-report/&#34;&gt;Tectonic&lt;/a&gt; I was introduced to one tool that handles Docker
and Kubernetes container introspection, &lt;a href=&#34;http://sysdig.com&#34;&gt;Sysdig&lt;/a&gt;. From Twitter I
also discovered &lt;a href=&#34;http://portainer.io&#34;&gt;Portainer&lt;/a&gt;, a nice system for container management.
Having installed both Portainer and Sysdig, the interesting bit
happens when you connect the together.&lt;/p&gt;

&lt;p&gt;Portainer provides a very high level view of your container
infrastructure, with an easy browser level access to see what
containers you have loaded on the system, what&amp;rsquo;s running, and how
to start or restart or pull new containers. Sysdig on the other
hand has a very low level kernel&amp;rsquo;s eye view of the system, watching
every system call and timing it and providing a system browser (with
&amp;ldquo;csysdig&amp;rdquo;) that is reminiscent of faithful Unix tools like &amp;lsquo;htop&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;First, install each of them according to package instructions.
As of this writing (December 2016) Portainer will run on Intel
and ARM platforms, but Sysdig really wants to run on Intel only.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://portainer.readthedocs.io/en/latest/deployment.html&#34;&gt;Portainer install instructions&lt;/a&gt;
will want you to pull the latest version (v1.11) and then
set a password. The vision for Portainer product direction
is full role based access control, so expect developments
here; just know that for now, if you want an admin password
to persist, you&amp;rsquo;ll have to persist the data in the filesystem
or in a Docker storage volume. As installs go, this is pretty
easy.&lt;/p&gt;

&lt;p&gt;Next, you&amp;rsquo;ll want to follow the &lt;a href=&#34;http://www.sysdig.org/install/&#34;&gt;Sysdig install instructions&lt;/a&gt;
for installing Sysdig in a container. We&amp;rsquo;re monitoring CoreOS,
which makes the effort directly supported; I haven&amp;rsquo;t done Ubuntu yet.
Sysdig wants to have a kernel module installed, and the CoreOS
install effort takes advantage of automated new kernel builds whenever
CoreOS does a new release.&lt;/p&gt;

&lt;p&gt;Once both systems are up, connect them together. You&amp;rsquo;ll want to
connect to a running sysdig container through the console, via
the navigation path dashboard / containers / sysdig / console.
Launch a console window on your Sysdig container, and in that console
run &amp;ldquo;csysdig -pc&amp;rdquo;. You&amp;rsquo;ll have a view on the innards of your containers.&lt;/p&gt;

&lt;p&gt;Now the biggest missing piece is the amount of this narrative
given over to install instructions, rather than use instructions.
Portainer has some very nice ways to install a variety of containerized
applications, but it doesn&amp;rsquo;t know how to launch Sysdig in a single
click, nor is it reasonable to naively assume that it can. Even once
you get the command line invocation right there may be a pesky
requirement to get kernel headers all exactly correct. Still, if
possible that would be the direction I&amp;rsquo;d give to both organizations -
make it easier to embed Sysdig tools and functions inside a Portainer framework.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trip report, Tectonic 2016.</title>
      <link>http://vielmetti.github.io/post/2016/2016-12-19-tectonic-2016-trip-report/</link>
      <pubDate>Mon, 19 Dec 2016 12:00:00 -0500</pubDate>
      
      <guid>http://vielmetti.github.io/post/2016/2016-12-19-tectonic-2016-trip-report/</guid>
      <description>

&lt;p&gt;The &lt;a href=&#34;https://tectonic.com/summit/&#34;&gt;Tectonic Summit&lt;/a&gt; was a conference in New York City in December 2016, hosted
by &lt;a href=&#34;https://coreos.com/&#34;&gt;CoreOS&lt;/a&gt;, with the theme &lt;em&gt;Enterprise Kubernetes&lt;/em&gt;. Mohan Kartha and
Edward Vielmetti went there as a guest of &lt;a href=&#34;http://packet.net&#34;&gt;Packet&lt;/a&gt;, a bare-metal hosting
provider in the city. This report details highlights of the presentations
at the event as well as accounts from attendees of what they thought
was missing from the presentation and discussions.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cncf/landscape/master/landscape/CloudNativeLandscape_v0.9.2.jpg&#34; style=&#34;max-width=100%&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;kubernetes&#34;&gt;Kubernetes&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; is an orchestration system that runs on top of a container
system like &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;. It allows an enterprise or service provider to
define a system that can scale up and down according to need. &lt;a href=&#34;http://blog.kubernetes.io/2016/12/kubernetes-1.5-supporting-production-workloads.html&#34;&gt;Version 1.5 of Kubernetes&lt;/a&gt;
was announced during the event, and it has extended
beyond the previous version by speeding up operations so that it can
support larger clusters.&lt;/p&gt;

&lt;p&gt;The Kubernetes project is relatively young, but it draws from
the experience of Google&amp;rsquo;s &amp;ldquo;Borg&amp;rdquo; program. Version 1.0 came
out about two years ago, and there have been tens of thousands
of contributions to the codebase since then.&lt;/p&gt;

&lt;h3 id=&#34;kubernetes-project-management-openstack-docker-comparison&#34;&gt;Kubernetes project management; OpenStack, Docker comparison&lt;/h3&gt;

&lt;p&gt;The Kubernetes project is run by the &lt;a href=&#34;https://www.cncf.io/&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt;,
which is about 50% by weight Google and the rest other cloud providers
like Amazon. There was some political discussion at the event where it
was clear that Kubernetes proponents made an effort to distance themselves
from the &lt;a href=&#34;http://www.openstack.org/foundation&#34;&gt;OpenStack Foundation&lt;/a&gt;. &lt;a href=&#34;http://www.openstack.org&#34;&gt;OpenStack&lt;/a&gt; was what people were doing
a few years ago to solve a similar set of problems, and that project
has floundered because of a combination of vendor-induced complexity
and a set of designs that did not reflect actual operation practice.
While the Kubernetes folks were all polite to OpenStack, they were
clear that they did not want to be tarred with the same brush.&lt;/p&gt;

&lt;p&gt;The other product positioning and political interest at the event was
how various organizations were dealing with &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;. That company
controls the container system that is being orchestrated by Kubernetes,
but also has been clawing its way up the stack acquiring other organizations
that do container management and monitoring and developing additional
capacities beyond the container core.  &lt;a href=&#34;https://www.docker.com/products/docker-swarm&#34;&gt;Docker Swarm&lt;/a&gt; competes with
Kubernetes, in the same way that the &lt;a href=&#34;https://coreos.com/rkt/&#34;&gt;rkt&lt;/a&gt; container engine competes
with [containerd] provided by Docker. The Kubernetes
team would really rather have a vendor-neutral, stable, drama free
container engine, rather than one that mutates all the time.&lt;/p&gt;

&lt;h3 id=&#34;self-driving-kubernetes-tectonic-from-coreos&#34;&gt;Self-driving Kubernetes: Tectonic from CoreOS&lt;/h3&gt;

&lt;p&gt;The major product announcement at the event was from CoreOS, their
namesake &lt;a href=&#34;https://tectonic.com/&#34;&gt;Tectonic&lt;/a&gt; product. The latest release of Tectonic is said to
be &amp;ldquo;self-driving&amp;rdquo;, i.e. will upgrade the version of Kubernetes on
a cluster automatically. Their observation was that people who
run Kubernetes spend an inordinate amount of time outside of Kubernetes
upgrading systems when a new version comes out, and that there was
an opportunity to remove that burden by automatically handling
upgrades using a strategy much like CoreOS&amp;rsquo;s own &lt;a href=&#34;https://coreos.com/os/docs/latest/&#34;&gt;Container Linux&lt;/a&gt;
which automagically installs new versions when they are available.&lt;/p&gt;

&lt;p&gt;Tectonic is now available with a &lt;a href=&#34;https://coreos.com/press/tectonic-self-driving.html&#34;&gt;free 10-node license&lt;/a&gt;. This is
a new pricing strategy aimed at capturing the trial and test user
market and offering an easier self-service onramp to getting started
with the system.&lt;/p&gt;

&lt;h3 id=&#34;sysdig-kubernetes-monitoring-and-debugging-tool&#34;&gt;Sysdig, Kubernetes monitoring and debugging tool&lt;/h3&gt;

&lt;p&gt;Kubernetes monitoring was demonstrated by &lt;a href=&#34;http://www.sysdig.org/&#34;&gt;Sysdig&lt;/a&gt;, which has a product
both for individual system monitoring and for container monitoring
of Kubernetes and Docker systems. There is lots of complexity in the container
world, with processes moving here and there and logical systems
dispersed across physical machines. sysdig starts with a robust
monitoring and introspection technology that can replace lots of
one-shot Linux monitoring tools (ps, top, sysstat etc) and extends
that tool function all the way up into Kubernetes.&lt;/p&gt;

&lt;p&gt;Provided for a fee is &lt;a href=&#34;https://sysdig.com/sysdig/&#34;&gt;Sysdig Cloud&lt;/a&gt; which puts a point-and-click GUI interface on
Kubernetes networking so that you get the whole picture at whatever
level of detail you want. Sysdig&amp;rsquo;s CEO also presented in Chicago at Docker Chicago.&lt;/p&gt;

&lt;h3 id=&#34;helm-kubernetes-provisioning-tool&#34;&gt;Helm, Kubernetes provisioning tool&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://helm.sh&#34;&gt;Helm&lt;/a&gt; was described as &amp;ldquo;like apt-get for Kubernetes&amp;rdquo;; it promises to make
deployment of systems easier by allowing a prepackaged set of commands
and configurations to be distributed through a central registry or
produced for your own private use. Every system needs a package manager.&lt;/p&gt;

&lt;h3 id=&#34;case-studies-ticketmaster-planet&#34;&gt;Case studies: Ticketmaster, Planet&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/rossdakin/status/808323710381920256&#34;&gt;Ticketmaster&lt;/a&gt; was the main customer case study provided. Their system
architecture support a very large, complex, heterogeneous workload
with very old legacy stuff in the core of it (an old Vax, with its
brain pickled into an emulator). The ticketing business model is
a &amp;ldquo;self-induced DDOS attack&amp;rdquo; with very bursty loads when tickets
go on sale. They use Kubernetes to schedule containers so as to
handle peak loads better.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.planet.com/&#34;&gt;Planet&lt;/a&gt; was a second case study, which does global daily hi res
satellite imagery.  Their previous operations environment deployed
VMs with Ansible, which led to a relatively slow deployment process
in which every image had crazy dependencies. Docker helps contain
dependency interactions.  Kubernetes helps scheduling and deployment
of resources as they are needed, so they can spin up and spin down
resources specific to a task and not have to guess what part of the
world their users are interested in today.&lt;/p&gt;

&lt;h3 id=&#34;storage-the-missing-link&#34;&gt;Storage, the missing link&lt;/h3&gt;

&lt;p&gt;Notably missing from the discussion was a comprehensive look at
storage. People had seemed to have sorted out at least the basics
of networking and compute distribution over these large workloads,
but anyone who had large storage needs had worked out something
specific and purpose-built to their environment.&lt;/p&gt;

&lt;p&gt;I had a conversation with the CTO of Quantum who is
the project lead for &lt;a href=&#34;https://rook.io/&#34;&gt;Rook&lt;/a&gt; which uses an embedded &lt;a href=&#34;https://www.mail-archive.com/ceph-users@lists.ceph.com/msg34143.html&#34;&gt;Ceph&lt;/a&gt; filesystem.
Ceph is one of the file systems that has come out of the
cluster world, and Rook is an attempt to cut it down to
size and simplify it so that it can be easily embedded
as container storage.&lt;/p&gt;

&lt;p&gt;No one really wants to write a file system from scratch and use it
in production that same year. The most mature file systems are decades
old and have a long history of correctness and performance tweaks.
Of all things to worry about people are largely unwilling to put
production loads on untested storage.&lt;/p&gt;

&lt;h3 id=&#34;kubernetes-progress-development-testing-deployment&#34;&gt;Kubernetes progress: development, testing, deployment&lt;/h3&gt;

&lt;p&gt;What people are using Kubernetes for: mostly for testing. The average
size of a cluster is less than 3 nodes, according to a Gartner
analyst.  &lt;a href=&#34;bare metal hosting&#34;&gt;Packet&lt;/a&gt; has seen uptake as a Kubernetes
test environment - it&amp;rsquo;s cheaper to provision bare metal than AWS or VMs
for Kubernetes, and performant enough for the test environment.&lt;/p&gt;

&lt;h3 id=&#34;arm-in-the-data-center&#34;&gt;ARM in the data center.&lt;/h3&gt;

&lt;p&gt;We had a good lunch discussion of ARM processors in the data center. Question:
is there any way to displace Intel&amp;rsquo;s dominance of data center
computing?  ARM has advantages at very low end due to low power
consumption, and the 4-core ARM Raspberry Pi 3 is a popular testbed for home clustering
but not suitable for data center use. Packet has a &lt;a href=&#34;https://www.packet.net/bare-metal/servers/type-2a/&#34;&gt;96-core ARMv8 server&lt;/a&gt;
that we have been involved in testing, and there was lots of interest in
stories around that.&lt;/p&gt;

&lt;p&gt;The challenges of ARM in the data center: Intel dominance on software
side, some small amount of fragmentation in Unix flavors, immaturity
of software ports to ARMv8 (even as compared to ARMv7), unconvincing
economics. One ex-Transmeta guy was very pessimistic about displacing
Intel because of Intel&amp;rsquo;s manufacturing lead. On the other hand a Khosla Ventures
exec was bullish on &lt;a href=&#34;http://www.cavium.com&#34;&gt;Cavium&lt;/a&gt;, an ARM server core vendor, and thought they
had a long way to grow. He was interested in a call back in 30 - 90
days with report on uptake.&lt;/p&gt;

&lt;h3 id=&#34;site-visit-packet-net&#34;&gt;Site visit: Packet.net&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://packet.net&#34;&gt;Packet&lt;/a&gt; provides bare metal as a service, either in your data
center or their own. The office was very busy and bursting at the
seams, with people sitting everywhere and a steady stream of vendors and
partners in evidence. Packet are very nice, prompt, pleasant people to deal
with, and they are expanding to new markets (Japan) with new
investment (Softbank) on new servers (ARMv8).&lt;/p&gt;

&lt;p&gt;The hosting market was explained to me this way: some companies have OpEx to
spend, so they spend it on AWS; others have CapEx to spend, so they
are trying to build a data center operating platform that&amp;rsquo;s friendly
to using on premises. Can you run your system on other people&amp;rsquo;s
capital? The Packet founders have been through this before and seem to have
built a culture that knows its market.&lt;/p&gt;

&lt;h3 id=&#34;in-conclusion&#34;&gt;In conclusion&lt;/h3&gt;

&lt;p&gt;Good conference, and thanks to CoreOS for organizing the event
and to Packet for inviting us to participate!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Optimal Opera</title>
      <link>http://vielmetti.github.io/post/2016/2016-12-19-optimal-opera/</link>
      <pubDate>Mon, 19 Dec 2016 08:00:00 -0500</pubDate>
      
      <guid>http://vielmetti.github.io/post/2016/2016-12-19-optimal-opera/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m testing out using Opera instead of Chrome as my browser of choice, as recommended by Ernie Smith.  So far so good.
He notes that Opera is &amp;ldquo;basically Chrome (same engine) minus the battery drain&amp;rdquo;.
My experience to date bears that out, though it&amp;rsquo;s in the early stages yet.&lt;/p&gt;

&lt;p&gt;The first thing I noticed is that memory usage for Opera is way less than for Chrome.
That&amp;rsquo;s a big deal for me because I&amp;rsquo;m often noticing that this MacBook Air is in the red zone for memory with Chrome.
With Opera that&amp;rsquo;s not the case so far - memory has been green since starting.
This should also translate into less SSD disk activity for swapping, and better battery life.&lt;/p&gt;

&lt;p&gt;The default configuration includes a lot of interesting features, including an ad blocker and a VPN.
Both of those are interesting, but not a complete replacement for the tools I&amp;rsquo;m looking for.&lt;/p&gt;

&lt;p&gt;The ad blocker is speedy, but it doesn&amp;rsquo;t block the comments on MLive, which is a pity - Ghostery did that well.
Fortunately, Ghostery is supported on Opera, so I can have two ad blockers running at once to get the desired result.
Opera counts the number of ads blocked. I don&amp;rsquo;t know if Ghostery&amp;rsquo;s blocked ads are double-counted.&lt;/p&gt;

&lt;p&gt;The VPN is set up to work with a public VPN endpoint, but I can&amp;rsquo;t configure it to use my private endpoint.
There are a number of other VPN plugins (plugsin?) available, each connecting to their own set of endpoints.
I&amp;rsquo;d like a general-purpose VPN tool that allows me to run my own endpoint, but I haven&amp;rsquo;t found one yet.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t import all of my bookmarks and cookies and passwords, which is a attempt to stay away from Facebook.
Ask me how much time I spend (or waste) on Facebook! There must be a better use of your time than that.
&lt;a href=&#34;https://mathbabe.org/2016/12/06/i-quit-facebook-and-my-life-is-better-now/&#34;&gt;Quit Facebook and make your life better&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>