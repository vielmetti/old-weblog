<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jq on Vacuum weblog from Edward Vielmetti</title>
    <link>http://vielmetti.github.io/code/jq/</link>
    <description>Recent content in Jq on Vacuum weblog from Edward Vielmetti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Aug 2015 00:40:00 -0400</lastBuildDate>
    
	<atom:link href="http://vielmetti.github.io/code/jq/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>First pass at MongoDB</title>
      <link>http://vielmetti.github.io/post/2015/2015-08-26-first-pass-at-mongodb/</link>
      <pubDate>Wed, 26 Aug 2015 00:40:00 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-08-26-first-pass-at-mongodb/</guid>
      <description>Somehow I never learned SQL along the way. At various times I have learned enough of the database lingo (inner join, outer join etc) to know where I missing things, and I have a lot of experience with common Unix tools (grep, sed, awk) and some newfangled tools (jq, csvkit) to be able to turn a big pile of data into a smaller pile of data. But I don&amp;rsquo;t have database chops per se right now, and sometimes that&amp;rsquo;s a limiting factor on projects when the data sets are too big.</description>
    </item>
    
    <item>
      <title>using &#34;jq&#34; for command line web applications for civic data</title>
      <link>http://vielmetti.github.io/post/2014/2014-10-05-using-jq-for-command-line-web-applications-for-civic-data/</link>
      <pubDate>Sun, 05 Oct 2014 09:03:34 +0000</pubDate>
      
      <guid>http://vielmetti.github.io/post/2014/2014-10-05-using-jq-for-command-line-web-applications-for-civic-data/</guid>
      <description>One of the tools that I rediscovered and have been really happy for having done so is &amp;ldquo;jq&amp;rdquo;, a command line tool that bills itself as &amp;ldquo;awk for json&amp;rdquo;.
I&amp;rsquo;ve been writing awk code since 1985, and some limited subset of it is something that I know really, really well. awk, however, is from the punchcard era, and as such it likes to deal with records that are all on one line each.</description>
    </item>
    
    <item>
      <title>Notes on building the Marquette Park Cemetery finder app for Code Michigan</title>
      <link>http://vielmetti.github.io/post/2014/2014-10-05-notes-on-building-the-marquette-park-cemetery-finder-app-for-code-michigan/</link>
      <pubDate>Sun, 05 Oct 2014 01:36:16 +0000</pubDate>
      
      <guid>http://vielmetti.github.io/post/2014/2014-10-05-notes-on-building-the-marquette-park-cemetery-finder-app-for-code-michigan/</guid>
      <description>I&#39;m working on a tool or a set of tools to assist people in finding grave sites in the Park Cemetery in Marquette, Michigan as a part of a project for Code Michigan. I&#39;m working with a team that&#39;s based in the U.P. to do this, and we&#39;re collaborating over Google Hangouts. Code Michigan is a hackathon, so this project timeline is compressed to a single weekend. The team is Edward Vielmetti, Jim Argeropoulos, Chris Marr, and Lynn Czarnecki Makela.</description>
    </item>
    
    <item>
      <title>do next?</title>
      <link>http://vielmetti.github.io/post/2014/2014-09-27-do-next/</link>
      <pubDate>Sat, 27 Sep 2014 15:52:45 +0000</pubDate>
      
      <guid>http://vielmetti.github.io/post/2014/2014-09-27-do-next/</guid>
      <description>One algorithm for deciding what to do next is simply to identify the item with the closest deadline and work on that. There is nothing like a deadline to focus the mind, and it is better to get the items that demand short term attention into the calendar and to allot the time to tackle them. Bernie Galler described this approach to me once, and it stuck.
A second approach is to put everything you might ever want to do in a big pile and pick something at random from it to work on.</description>
    </item>
    
  </channel>
</rss>