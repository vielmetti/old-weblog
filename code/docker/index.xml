<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Vacuum weblog from Edward Vielmetti</title>
    <link>http://vielmetti.github.io/code/docker/</link>
    <description>Recent content in Docker on Vacuum weblog from Edward Vielmetti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Sep 2015 17:00:00 -0400</lastBuildDate>
    <atom:link href="http://vielmetti.github.io/code/docker/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Bluetooth and bluez inside Docker</title>
      <link>http://vielmetti.github.io/post/2015/2015-09-11-bluetooth-bluez-inside-docker/</link>
      <pubDate>Fri, 11 Sep 2015 17:00:00 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-09-11-bluetooth-bluez-inside-docker/</guid>
      <description>&lt;p&gt;If you have a Bluetooth device attached to a Linux system, it&amp;rsquo;s
not clear how to attach that device to a Docker container on that
same system.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bluez&lt;/code&gt;, the Bluetooth driver for Linux, uses the &lt;code&gt;D-Bus&lt;/code&gt; to communicate.
This is more complex than a FIFO or socket interface, and thus less
easy to obviously say how it should be mapped into the Docker processs
and file system space.&lt;/p&gt;

&lt;p&gt;The references below show several ways of not doing this task,
and hopefully at some point will get answers on how to do it.&lt;/p&gt;

&lt;p&gt;References for further reading:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/docker/docker/issues/16208&#34;&gt;Bluetooth socket can&amp;rsquo;t be opened inside container&lt;/a&gt;, Docker Github issues 16208&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/28868393/accessing-bluetooth-dongle-from-inside-docker&#34;&gt;Accessing Bluetooth dongle from inside Docker?&lt;/a&gt;, Stack Overflow.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Daily coffee and wifi at Argus Farm Stop</title>
      <link>http://vielmetti.github.io/post/2015/2015-07-24-daily-coffee-wifi-argus-farm-stop/</link>
      <pubDate>Fri, 24 Jul 2015 09:55:00 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-07-24-daily-coffee-wifi-argus-farm-stop/</guid>
      <description>&lt;p&gt;Daily coffee and wifi at Argus Farm Stop, outside in the sunshine
under a lovely red umbrella canopy. Espresso over ice and a day-old
olive twist. The view is of a Sky Trak lift at the construction
site across moving materials to the back of The Mark, a building
that&amp;rsquo;s going up where the car wash used to be.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;The news of the day is a death on State Street. A young man was
climbing over the skylights at the Nickels Arcade and fell to his
death when the skylight glass gave way.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;On July 24, 1915, the SS Eastland was packed with employees from
the Western Electric Hawthorne Works when it rolled over in
the Chicago River. 844 passengers and crew lost their lives, making
the Eastland disaster the worst shipwreck on the Great Lakes.
See the &lt;a href=&#34;http://www.eastlanddisaster.org/&#34;&gt;Eastland Disaster Historical Society&lt;/a&gt;
for extensive notes on and photos of the scene and its aftermath.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;The next meeting of &lt;a href=&#34;http://www.meetup.com/a2civictech/&#34;&gt;a2civictech&lt;/a&gt;
is coming up on Monday, July 27, 2015.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;&lt;a href=&#34;http://www.literatibookstore.com/&#34;&gt;Literati Bookstore&lt;/a&gt; is open
again after a water leak caused them to shut down.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;A few months ago I wrote a tiny R script that generates maps. The challenge
today is to find a portable environment so that I can deploy this script
on shared infrastructure. The project took 30 minutes of MacBook Air processor
time running full blast parallel, and while I don&amp;rsquo;t care about wall clock time
to complete the effort I do care about building something that I can hand
off to someone else to run.&lt;/p&gt;

&lt;p&gt;The hope is that the &lt;a href=&#34;https://github.com/rocker-org/ropensci&#34;&gt;ropensci&lt;/a&gt; Docker
package from the Rocker project is the answer, or most of the answer, for this.
Rocker has built R images where lots of useful packages have been installed,
including systems where the install directions are a little bit complex.&lt;/p&gt;

&lt;p&gt;With all complicated software environments the biggest challenge is dealing
with dependencies. If you want to use the latest and greatest fast algorithms,
you have to be prepared to spin up on what the cool kids are doing in the
rest of their environment. If somehow you can jump to the edge of the development
in the algorithm world without being tripped up by the hairy dependency graph
that got you there, it can be a lot more fun.&lt;/p&gt;

&lt;p&gt;So; install Docker on the Mac with &amp;lsquo;boot2docker&amp;rsquo;; then&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker pull rocker/ropensci
docker run -it rocker/ropensci R
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and poof, you have an environment current to this month&amp;rsquo;s desktop of leading
R developers.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Docker Detroit, Wednesday July 22, 2015, 6:00 pm, Troy, Michigan</title>
      <link>http://vielmetti.github.io/post/2015/2015-07-22-docker-detroit/</link>
      <pubDate>Wed, 22 Jul 2015 10:50:00 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-07-22-docker-detroit/</guid>
      <description>&lt;p&gt;I hope to see you at Docker Detroit&amp;rsquo;s kickoff meeting, to be held
at RIIS, 1250 Stephenson Highway, Suite 200 in Troy, MI starting
at 6:00 p.m. tonight July 22 2015.  I&amp;rsquo;ll be coming in from Ann
Arbor. The venue is between 14 Mile and Maple behind Beaumont Hospital.
Google Maps suggests that because of construction on I-75 in that
area you might want to head north on Campbell instead of taking
the I-75 / I-696 interchange north.&lt;/p&gt;

&lt;p&gt;Leading the meeting tonight is Pepijn Bruienne from the University
of Michigan. He will be speaking about &amp;ldquo;Docker in production&amp;rdquo;
and organizing a group discussion with Q&amp;amp;A.&lt;/p&gt;

&lt;p&gt;See the &lt;a href=&#34;http://www.meetup.com/Docker-Detroit/events/223111645/&#34;&gt;meetup announcement&lt;/a&gt;
for more details, refreshments will be provided.&lt;/p&gt;

&lt;p&gt;The meetup is hosted at &lt;a href=&#34;http://www.riis.com&#34;&gt;RIIS&lt;/a&gt; a boutique web
and mobile development house. Hope to see you there!  I&amp;rsquo;ll be taking
notes and plan to do a writeup of the event, as well as sharing my
own experiences running Docker for ARM on a Raspberry PI 2.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>bocker is a subset of Docker in 100 lines of shell script</title>
      <link>http://vielmetti.github.io/post/2015/2015-07-21-docker-in-bash/</link>
      <pubDate>Tue, 21 Jul 2015 18:48:00 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-07-21-docker-in-bash/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/p8952/bocker&#34;&gt;bocker&lt;/a&gt; is Docker (or at least
a good sized subset of it) in 100 lines of shell script.
I suppose the point is that even though there&amp;rsquo;s a huge
world of hype surrounding containerization as a next step
of systems management, when you get down to it, it&amp;rsquo;s just not
that complicated.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Docker 1.7.0 issues: problems with Mac and boot2docker, ARM, Ubuntu, and disk size of images</title>
      <link>http://vielmetti.github.io/post/2015/2015-06-26-docker-170-issues-problems-with-mac-and-boot2docker-arm-and-disk-size-of-images/</link>
      <pubDate>Fri, 26 Jun 2015 19:50:46 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-06-26-docker-170-issues-problems-with-mac-and-boot2docker-arm-and-disk-size-of-images/</guid>
      <description>&lt;p&gt;Docker 1.7.0 has been released into the wild. Every .0 release of software should be expected to have some issues, no matter how good the QA and automated test process. Here&#39;s what to expect if you&#39;re getting Docker 1.7.0 up and running.&lt;/p&gt;

&lt;h3&gt;boot2docker on Mac&lt;/h3&gt;

&lt;p&gt;On the Mac, with boot2docker: &lt;a href=&#34;https://github.com/boot2docker/boot2docker/issues/938&#34;&gt;Docker certs not valid with 1.7 upgrade&lt;/a&gt; is issue 938 on boot2docker. The symptom is a message like this&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;An error occurred trying to connect: Get https://192.168.59.103:2376/v1.19/containers/json: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.103&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and restarting docker on the VM with &lt;code&gt;boot2docker ssh sudo /etc/init.d/docker restart&lt;/code&gt; fixes it, at least temporarily. Read through the issue on github to see the full diagnosis - as best I understand it, eth1 is not up when certificates are generated, hence the cert not valid error.&lt;/p&gt;

&lt;h3&gt;Raspberry Pi or any other ARM system&lt;/h3&gt;

&lt;p&gt;On a Raspberry Pi: &lt;a href=&#34;https://github.com/docker/docker/issues/14184&#34;&gt;Docker 1.7 on RaspberryPI : &#34;socket operation on non-socket&#34;&lt;/a&gt; is issue 14184 on docker. The symptom is a message like this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[tki@anzu ~]$ docker start redis
  Error response from daemon: Cannot start container redis: socket operation on non-socket
  Error: failed to start containers: [redis]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The error flushed out a whole set of people running Docker on ARM on a variety of platforms, all having similar issues. If you&#39;re running a Scaleway C1, ODROID C1, ODROID XU3-Lite, Utilite Pro, Cubox 4x4, and all flavors of Raspberry Pi or Pi 2 you&#39;ll see this. &#34;When using --net host the container starts&#34; is the report, but port forwarding fails to work in that case.&lt;/p&gt;

&lt;h3&gt;Ubuntu: problems with statically compiled Docker binaries&lt;/h3&gt;

&lt;p&gt;The issue is &lt;a href=&#34;https://github.com/docker/docker/issues/14035&#34;&gt;Ubuntu 15.04 vivid can not start docker 1.7.0&lt;/a&gt;, docker issue 14035. The relevant bits of the error message are&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ERRO[0000] Udev sync is not supported. This will lead to unexpected behavior, data loss and errors. For more information, see https://docs.docker.com/reference/commandline/cli/#daemon-storage-driver-option &lt;/p&gt;
  
  &lt;p&gt;ERRO[0000] [graphdriver] prior storage driver &#34;devicemapper&#34; failed: driver not supported &lt;/p&gt;
  
  &lt;p&gt;FATA[0000] Error starting daemon: error initializing graphdriver: driver not supported &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is a long discussion, culminating in &lt;code&gt;In the end, removing /var/lib/docker/devicemapper/ will fix the issue&lt;/code&gt;, but people are also rolling back to 1.6.2. &lt;/p&gt;

&lt;h3&gt;Ubuntu on x86: large file sizes&lt;/h3&gt;

&lt;p&gt;A report that &lt;a href=&#34;https://forums.docker.com/t/docker-1-7-0-is-using-huge-amount-of-disk-space/2046&#34;&gt;Docker 1.7.0 is using huge amounts of disk space&lt;/a&gt; appears on the Docker forum, item 2046. &lt;a href=&#34;https://github.com/docker/docker/issues/14204&#34;&gt;Pulling image fills disk/image size is huge, version 1.7.0&lt;/a&gt; is issue 14204 on Docker. Not much insight into this one yet.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>a few notes from Dockercon 2015, as seen via Twitter</title>
      <link>http://vielmetti.github.io/post/2015/2015-06-24-a-few-notes-from-dockercon-2015-as-seen-via-twitter/</link>
      <pubDate>Wed, 24 Jun 2015 13:27:13 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-06-24-a-few-notes-from-dockercon-2015-as-seen-via-twitter/</guid>
      <description>&lt;p&gt;The annual conference for Docker, &lt;a href=&#34;http://www.dockercon.com/&#34;&gt;Dockercon&lt;/a&gt;, has been going on. A few highlights from the event as seen through Twitter - I was not there to attend it.&lt;/p&gt;

&lt;p&gt;Docker is real on the Raspberry Pi through support for the ARM processor. &lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Awesome live demo of Docker on a Raspberry Pi by &lt;a href=&#34;https://twitter.com/Quintus23M&#34;&gt;@Quintus23M&lt;/a&gt; in the &lt;a href=&#34;https://twitter.com/hashtag/dockercon?src=hash&#34;&gt;#dockercon&lt;/a&gt; closing keynote. &lt;a href=&#34;http://t.co/DJfBtpcYws&#34;&gt;pic.twitter.com/DJfBtpcYws&lt;/a&gt;&lt;/p&gt;&amp;mdash; Bridget Kromhout (@bridgetkromhout) &lt;a href=&#34;https://twitter.com/bridgetkromhout/status/613495958089785344&#34;&gt;June 23, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;More details from the presenter, &lt;a href=&#34;http://blog.hypriot.com/post/dockercon2015/&#34;&gt;Hypriot-Demo and challenge at DockerCon 2015&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Docker&#39;s plumbing is being spun out as &lt;a href=&#34;http://blog.docker.com/2015/06/runc/&#34;&gt;runC&lt;/a&gt;. The new infrastructure supports migration of containers from one server to another, illustrated through a Quake III demo.&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;QuakeIII in a container, migrated seamlessly from Singapore to Amsterdam to London using &lt;a href=&#34;https://twitter.com/hashtag/runc?src=hash&#34;&gt;#runc&lt;/a&gt;. &lt;a href=&#34;https://twitter.com/hashtag/dockercon?src=hash&#34;&gt;#dockercon&lt;/a&gt; &lt;a href=&#34;http://t.co/no3c0G1MDY&#34;&gt;pic.twitter.com/no3c0G1MDY&lt;/a&gt;&lt;/p&gt;&amp;mdash; Paul V. Novarese (@pvnovarese) &lt;a href=&#34;https://twitter.com/pvnovarese/status/613499654219526144&#34;&gt;June 24, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;For more highlights, see the &lt;a href=&#34;http://venturebeat.com/2015/06/22/everything-announced-at-dockercon-2015/&#34;&gt;Venturebeat roundup of Dockercon 2015&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Docker&#39;s new RunC doesn&#39;t (yet?) work on Mac OS X</title>
      <link>http://vielmetti.github.io/post/2015/2015-06-22-dockers-new-runc-doesnt-yet-work-on-mac-os-x-/</link>
      <pubDate>Mon, 22 Jun 2015 16:53:10 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-06-22-dockers-new-runc-doesnt-yet-work-on-mac-os-x-/</guid>
      <description>&lt;p&gt;Docker has a new runtime environment that they are releasing called &lt;a href=&#34;http://blog.docker.com/2015/06/runc/&#34;&gt;runC&lt;/a&gt;. It&#39;s a &#34;lightweight universal plumbing&#34; that tries to encapsulate all of the Docker dependencies and infrastructure. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;To build Docker we have re-used large quantities of plumbing: Linux, Go, lxc, aufs, lvm, iptables, virtualbox, vxlan, mesos, etcd, consul, systemd… the list goes on.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Because of Docker&#39;s start on Linux systems, it&#39;s been tricky to get it running under Mac OS X. Some tries to make it work depend on setting up virtual machines (with the likes of boot2docker) which makes it work at the cost of performance and flexibility. Docker on OS X has not been exceptionally easy though it does work once you commit to doing all of your Docker server work inside a VM&lt;/p&gt;

&lt;p&gt;runC would be an answer to the problem of native Docker on OSX X, one might hope, but as of its first release it doesn&#39;t work. The first of what is probably many hurdles is the extensive use of the clone(2) system call instead of fork(2). This &lt;a href=&#34;http://files.meetup.com/10602292/See%20Docker%20from%20the%20Perspective%20of%20Linux%20Process.pdf&#34;&gt;presentation from Allen Sun at DaoCloud&lt;/a&gt; goes into the details of Docker&#39;s use of clone(2) from the perspective of Linux processes. It is notable that the OS X &#34;Darwin&#34; kernel doesn&#39;t have clone(2), and it&#39;s as far as I can tell not readily possible to mimic all of clone&#39;s semantics strictly by using fork in clever ways.&lt;/p&gt;

&lt;p&gt;An open issue on Github is tracking &lt;a href=&#34;https://github.com/opencontainers/runc/issues/9&#34;&gt;Build fails on Mac OS X 10.9&lt;/a&gt;. I don&#39;t see an easy fix without work by Apple on their kernel.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>