<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Vacuum weblog from Edward Vielmetti</title>
    <link>http://vielmetti.github.io/code/docker/</link>
    <description>Recent content in Docker on Vacuum weblog from Edward Vielmetti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Sep 2015 17:00:00 -0400</lastBuildDate>
    
	<atom:link href="http://vielmetti.github.io/code/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bluetooth and bluez inside Docker</title>
      <link>http://vielmetti.github.io/post/2015/2015-09-11-bluetooth-bluez-inside-docker/</link>
      <pubDate>Fri, 11 Sep 2015 17:00:00 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-09-11-bluetooth-bluez-inside-docker/</guid>
      <description>If you have a Bluetooth device attached to a Linux system, it&amp;rsquo;s not clear how to attach that device to a Docker container on that same system.
bluez, the Bluetooth driver for Linux, uses the D-Bus to communicate. This is more complex than a FIFO or socket interface, and thus less easy to obviously say how it should be mapped into the Docker processs and file system space.
The references below show several ways of not doing this task, and hopefully at some point will get answers on how to do it.</description>
    </item>
    
    <item>
      <title>Daily coffee and wifi at Argus Farm Stop</title>
      <link>http://vielmetti.github.io/post/2015/2015-07-24-daily-coffee-wifi-argus-farm-stop/</link>
      <pubDate>Fri, 24 Jul 2015 09:55:00 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-07-24-daily-coffee-wifi-argus-farm-stop/</guid>
      <description>Daily coffee and wifi at Argus Farm Stop, outside in the sunshine under a lovely red umbrella canopy. Espresso over ice and a day-old olive twist. The view is of a Sky Trak lift at the construction site across moving materials to the back of The Mark, a building that&amp;rsquo;s going up where the car wash used to be.
 The news of the day is a death on State Street.</description>
    </item>
    
    <item>
      <title>bocker is a subset of Docker in 100 lines of shell script</title>
      <link>http://vielmetti.github.io/post/2015/2015-07-21-docker-in-bash/</link>
      <pubDate>Tue, 21 Jul 2015 18:48:00 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-07-21-docker-in-bash/</guid>
      <description>bocker is Docker (or at least a good sized subset of it) in 100 lines of shell script. I suppose the point is that even though there&amp;rsquo;s a huge world of hype surrounding containerization as a next step of systems management, when you get down to it, it&amp;rsquo;s just not that complicated.</description>
    </item>
    
    <item>
      <title>Docker&#39;s new RunC doesn&#39;t (yet?) work on Mac OS X</title>
      <link>http://vielmetti.github.io/post/2015/2015-06-22-dockers-new-runc-doesnt-yet-work-on-mac-os-x-/</link>
      <pubDate>Mon, 22 Jun 2015 16:53:10 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-06-22-dockers-new-runc-doesnt-yet-work-on-mac-os-x-/</guid>
      <description>Docker has a new runtime environment that they are releasing called runC. It&#39;s a &#34;lightweight universal plumbing&#34; that tries to encapsulate all of the Docker dependencies and infrastructure.  To build Docker we have re-used large quantities of plumbing: Linux, Go, lxc, aufs, lvm, iptables, virtualbox, vxlan, mesos, etcd, consul, systemdâ€¦ the list goes on.
 Because of Docker&#39;s start on Linux systems, it&#39;s been tricky to get it running under Mac OS X.</description>
    </item>
    
  </channel>
</rss>