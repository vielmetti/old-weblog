<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Awk on Vacuum weblog from Edward Vielmetti</title>
    <link>http://vielmetti.github.io/code/awk/</link>
    <description>Recent content in Awk on Vacuum weblog from Edward Vielmetti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Jul 2015 16:11:41 -0400</lastBuildDate>
    <atom:link href="http://vielmetti.github.io/code/awk/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Levenshtein distance for approximate match</title>
      <link>http://vielmetti.github.io/post/2015/2015-07-17-levenshtein-distance-for-approximate-match/</link>
      <pubDate>Fri, 17 Jul 2015 16:11:41 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-07-17-levenshtein-distance-for-approximate-match/</guid>
      <description>&lt;p&gt;The problem, simply stated, is that of typoes and inconsistent
spelling and pluraliziation. Let&amp;rsquo;s say you have a collection of
text that you want to annotate with some metadata, like categories
and tags. You don&amp;rsquo;t want to set aside ahead of time exactly which
tags you want to use, but you want to catch through some test or
lint step that you&amp;rsquo;ve done something wrong by typing &amp;ldquo;apples&amp;rdquo; into
a field that really has &amp;ldquo;apple&amp;rdquo; most of the time. A good algorithm
will catch minor deviations from the norm and advise you when you
should go back with a fresh pair of eyes and do an edit.
The bigger problem is &lt;span style=&#34;background-color: #ffffbf;&#34;&gt;deduplication&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;My first pass at a proposed solution was to look for a version of
the old Unix program &amp;ldquo;uniq&amp;rdquo; that would have an approximate match.
There is also an old Unix program &amp;ldquo;agrep&amp;rdquo; (&amp;ldquo;approximate grep&amp;rdquo;) from
&lt;span style=&#34;background-color: #bfffff;&#34;&gt;Udi Manber&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;[WM92a]
Wu S. and U. Manber, &amp;ldquo;Agrep - A Fast Approximate Pattern-Matching
Tool,&amp;rdquo; Usenix Winter 1992 Technical Conference, San Francisco (January
1992), pp. 153-162.&lt;/p&gt;

&lt;p&gt;Neither of these first lines of attack to see if someone had
completely solved the problem before did the trick, but some
searching around and a conversation with
&lt;span style=&#34;background-color: #bfffff;&#34;&gt;John Hritz&lt;/span&gt;
hit the neuron that remembered the algorithm called the
&lt;span style=&#34;background-color: #ffffbf;&#34;&gt;Levenshtein distance&lt;/span&gt;.
That led me to
&lt;span style=&#34;background-color: #ffbfff;&#34;&gt;Wikibook: Algorithm Implementation&lt;/span&gt;,
and its set of
&lt;a href=&#34;https://en.wikibooks.org/wiki/Algorithm_Implementation/Strings/Levenshtein_distance&#34;&gt;Levenshtein distance code&lt;/a&gt;. It so happened that there
was a very slow implementation in the bash shell included
in that collection that was a cut and paste and two lines of
code from being exactly what I needed. A little bit of glue
code in awk and I was ready to go.&lt;/p&gt;

&lt;p&gt;Now the problem with cut and paste two lines of code is that this
particular implmentation is very slow, albeit correct. Given the
choice between slow correct code and fast code that&amp;rsquo;s wrong (because
of the bug that you don&amp;rsquo;t yet understand), I&amp;rsquo;ll take the slow code
plus a comment and a writeup that describes how to make it faster.&lt;/p&gt;

&lt;p&gt;What I&amp;rsquo;m really after is just the pairwise comparison of a set
of words where the two words are close to each other. If the
distance between two words is greater than some threshhold, I don&amp;rsquo;t need
to go any further. That algorithmic shortcut isn&amp;rsquo;t in the library
codes that I found.&lt;/p&gt;

&lt;p&gt;The bigger question is how to write a
checklist
and implement it in code to make sure that a big body of work stays
internally consistent. It&amp;rsquo;s one thing to have a
categorization
rule for your writers that says &amp;ldquo;always use the
singular&amp;rdquo;, but very much something different to have Test 38 in
your automated test corpus apply that rule and notice when it&amp;rsquo;s
wrong.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;Update 29 July 2015:
&lt;span style=&#34;background-color: #bfffff;&#34;&gt;Dennis Yurichev&lt;/span&gt; with a post
&lt;a href=&#34;http://yurichev.com/blog/fuzzy_string/&#34;&gt;Fuzzy string matching + simplest possible spellchecking + hunting for typos and misspellings in Wikipedia.&lt;/a&gt; shares some Python code to handle the
case of automated checking against a probably correct dictionary. He uses this
&lt;a href=&#34;https://pypi.python.org/pypi/python-Levenshtein/0.12.0&#34;&gt;python-Levenshtein&lt;/a&gt; module
to do the hard work.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>using &#34;jq&#34; for command line web applications for civic data</title>
      <link>http://vielmetti.github.io/post/2014/2014-10-05-using-jq-for-command-line-web-applications-for-civic-data/</link>
      <pubDate>Sun, 05 Oct 2014 09:03:34 +0000</pubDate>
      
      <guid>http://vielmetti.github.io/post/2014/2014-10-05-using-jq-for-command-line-web-applications-for-civic-data/</guid>
      <description>&lt;p&gt;One of the tools that I rediscovered and have been really happy for
having done so is &amp;ldquo;jq&amp;rdquo;, a command line tool that bills itself as
&amp;ldquo;awk for json&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been writing awk code since 1985, and some limited subset
of it is something that I know really, really well. awk, however,
is from the punchcard era, and as such it likes to deal with records
that are all on one line each. Parsing JSON in awk is very clumsy
and ad hoc and really doesn&amp;rsquo;t work all that well. Since most Internet
APIs these days have some kind of JSON encoding, it means that you
can&amp;rsquo;t simply dash off an awk one-liner to consume and transform
Internet input data.&lt;/p&gt;

&lt;p&gt;jq fixes that situation. Here for example is a one line renderings of a common task I look to solve with municipal data as a test of any new tool development: analysis of parking data. This code sample prints the total number of open spaces in the Ann Arbor Downtown Development Authority&amp;rsquo;s garages:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;curl -s http://www.a2dda.org/map/AADDACount.json |
  jq &#34;[.countdata[].spacesavail | tonumber] | add&#34; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;m not going to try to explain how jq works, except to note that
it&amp;rsquo;s constructed in order to be a filter: data comes in one JSON
object at a time, and the script iterates over them, transforming
them in some way and then passing JSON out the other end. This makes
it perfect for ad hoc Unix pipeline efforts where you&amp;rsquo;re chipping
away at a data set trying to make sense of it by successively
refining it as you go.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve built jq pipelines for this Ann Arbor parking data, for AAATA
bus system data, and for the Marquette Park Cemetery data. The
parking data is straightforward, since it exits the system as JSON.
Bus system data is only incrementally harder; it started either as
HTML or as XML, and for that you want to use &amp;ldquo;tidy&amp;rdquo; and &amp;ldquo;xml2json&amp;rdquo;
in your pipeline. The Park Cemetery data set started as JSON via
the Socrata SODA API, but I needed little bits of &amp;ldquo;sed&amp;rdquo; and &amp;ldquo;perl&amp;rdquo;
to smooth out some rough edges in the source data; it really wants
to end up as GeoJSON when I&amp;rsquo;m done, but it isn&amp;rsquo;t there quite yet.&lt;/p&gt;

&lt;p&gt;Shell programming is my favorite programming environment. Any time
I can take a set of well-understood tools and crunch through big
data sets with only a few lines of code, I&amp;rsquo;m happy. The challenge
of shell programming is that it&amp;rsquo;s full of opportunities to get
things just a little bit wrong with parsing; by making JSON the
data format that&amp;rsquo;s shoveled between programs rather than a flat
one-record-per-line text format, you open up the opportunity for
pulling apart rather complex structures and manipulating them with
hardly any work.&lt;/p&gt;

&lt;p&gt;For further reading, see Jeroen Janssens new book &lt;a
href=&#34;http://datascienceatthecommandline.com/&#34;&gt;Data Science at the
Command Line&lt;/a&gt; which works you way through dozens of tools like
this that can help manage big data without big programs.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Joyent Manta: map/reduce for Unix natives</title>
      <link>http://vielmetti.github.io/post/2013/2013-06-27-joyent-manta-mapreduce-for-unix-natives/</link>
      <pubDate>Thu, 27 Jun 2013 00:58:42 +0000</pubDate>
      
      <guid>http://vielmetti.github.io/post/2013/2013-06-27-joyent-manta-mapreduce-for-unix-natives/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.typepad.com/dashboard&#34; target=&#34;_self&#34;&gt;Joyent has released Manta&lt;/a&gt;, a computing environment that includes a powerful map/reduce system which leverages native Unix commands. Unlike a Hadoop world where you have to spin up a Java environment to get anything done, Manta makes map/reduce as simple as possible for those of us who know the Unix shell pretty well.&lt;/p&gt;
&lt;p&gt;Some examples may be useful.&lt;/p&gt;
&lt;pre&gt;for n in $HOME/doc/books/*
do 
   wc -l $n &amp;gt;&amp;gt; $TMP/wc-tmp
done
awk &amp;#39;{ t += $1 } END { print t }&amp;#39; &amp;lt; $TMP/wc-tmp
&lt;/pre&gt;
&lt;p&gt;has an equivalent in Manta as something like&lt;/p&gt;
&lt;pre&gt;mfind -t o /$MANTA_HOME/stor/books | \
   mjob create -o -m &amp;quot;wc -l&amp;quot; -r &amp;quot;awk &amp;#39;{ t += \$1 } END { print t }&amp;#39; &amp;quot;
&lt;/pre&gt;
&lt;p&gt;where the word count command &amp;quot;wc&amp;quot; is the &amp;quot;map&amp;quot; step, and the awk summation is the &amp;quot;reduce&amp;quot; step.&lt;/p&gt;
&lt;p&gt;Some other commentary on the system, which I&amp;#39;m still learning, is scattered around the net.&lt;/p&gt;
&lt;p&gt;Joyent: &lt;a href=&#34;http://www.joyent.com/blog/big-compute-for-big-data-with-manta-storage-service&#34; target=&#34;_self&#34;&gt;Big compute for Big Data with Manta&lt;/a&gt; (screencast)&lt;/p&gt;
&lt;p&gt;Joyent: &lt;a href=&#34;http://www.joyent.com/blog/hello-manta-bringing-unix-to-big-data&#34; target=&#34;_self&#34;&gt;Hello Manta: Bringing Unix to Big Data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Wanelo:&amp;#0160;&lt;a href=&#34;http://building.wanelo.com/post/54110156963/a-cost-effective-approach-to-scaling-event-based-data&#34; target=&#34;_self&#34;&gt;A Cost-effective Approach to Scaling Event-based Data Collection and Analysis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks for pointing this out, Alan Gutierrez!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Amelanchier (Shadbush, Juneberry, Sugar Plum) inventory for Ann Arbor, 2009</title>
      <link>http://vielmetti.github.io/post/2009/2009-07-03-amelanchier-shadbush-juneberry-sugar-plum-inventory-for-ann-arbor-2009/</link>
      <pubDate>Fri, 03 Jul 2009 00:47:55 +0000</pubDate>
      
      <guid>http://vielmetti.github.io/post/2009/2009-07-03-amelanchier-shadbush-juneberry-sugar-plum-inventory-for-ann-arbor-2009/</guid>
      <description>&lt;p&gt;Here&amp;#39;s a complete list of where all of the Amelanchier (juneberry, shadbush, sugar plum depending on where you are from) trees are on the public streets in Ann Arbor.&amp;#0160; The complete inventory shows 356 trees, each geocoded; rather than try to pin them on a map, this is by street name in alphabetical order, with quite a bit of duplicates eliminated.&lt;/p&gt;
&lt;p&gt;The whole program to do this is&lt;/p&gt;
&lt;p&gt;grep -i Amelanchier trees09.csv | awk -F, &amp;#39;{ print $3, &amp;quot;between&amp;quot;, $4, &amp;quot;and &amp;quot; $5}&amp;#39; | sort | uniq &amp;gt; juneberry.txt&lt;/p&gt;
&lt;p&gt;where the trees09.csv file is downloadable from the Ann Arbor Chronicle who originally sourced this data from the city of Ann Arbor; &lt;a href=&#34;http://annarborchronicle.com/2009/07/01/city-and-residents-to-make-tree-policy/&#34;&gt;see their story about it here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Alas this post is a little bit too late for this season; by July 2, 2009, many of the juneberry trees are completely ripe, so get picking.&lt;/p&gt;
&lt;p&gt;ABBOTT AVE between MONTGOMERY AVE and S REVENA BLVD&lt;br /&gt;ALLMENDINGER PARK between ALLMENDINGER PARK and ALLMENDINGER PARK&lt;br /&gt;ANTIETAM DR between CUL DE SAC and LEXINGTON DR&lt;br /&gt;ANTIETAM DR between LEXINGTON DR and CUL DE SAC&lt;br /&gt;ARBANA DR between W HURON ST and MARK HANNAH PL&lt;br /&gt;ARBOR OAKS PARK between ARBOR OAKS PARK and ARBOR OAKS PARK&lt;br /&gt;ARBORDALE ST between W STADIUM BLVD and EVELYN CT&lt;br /&gt;ARDMOOR AVE between CUL DE SAC and MARTHA AVE&lt;br /&gt;ARDMOOR AVE between MARTHA AVE and CUL DE SAC&lt;br /&gt;ASCOT RD between CHAUCER DR and CHAUCER DR&lt;br /&gt;BADER PARK between BADER PARK and BADER PARK&lt;br /&gt;BANDEMER PARK between BANDEMER PARK and BANDEMER PARK&lt;br /&gt;BARDSTOWN TRL between LARCHMONT DR and MIDDLETON DR&lt;br /&gt;BIRD RD between NEWPORT CREEK DR and W HURON RIVER DR&lt;br /&gt;BIRK AVE between PAULINE BLVD and SNYDER AVE&lt;br /&gt;BLAIN CT between CUL DE SAC and SHADOWOOD DR&lt;br /&gt;BRANDYWINE DR between GALLWAY CT and PACKARD RD&lt;br /&gt;BRIAN CT between CUL DE SAC and MEADOWSIDE DR&lt;br /&gt;BRIARCLIFF ST between PRAIRIE ST and AURORA ST&lt;br /&gt;BROOKS ST between MIXTWOOD RD and MILLER AVE&lt;br /&gt;BROOKSIDE PARK between BROOKSIDE PARK and BROOKSIDE PARK&lt;br /&gt;BUHR PARK between BUHR PARK and BUHR PARK&lt;br /&gt;CAMBRIDGE RD between DAY ST and HILL ST&lt;br /&gt;CATHERINE ST between N FOURTH AVE and N FIFTH AVE&lt;br /&gt;CATHERINE ST between N INGALLS ST and GLEN AVE&lt;br /&gt;CHARLES ST between BROOKRIDGE RD and DANIEL ST&lt;br /&gt;CHAUCER DR between SCIO CHURCH RD and WEMBLEY CT&lt;br /&gt;CHERRY ST between SPRING ST and FOUNTAIN ST&lt;br /&gt;COLONY RD between ESSEX RD and PACKARD RD&lt;br /&gt;COLUMBIA AVE between KIMBERLEY RD and DEAD END&lt;br /&gt;CORONADA DR between LAS VEGAS DR and ALHAMBRA DR&lt;br /&gt;CRANBROOK PARK between CRANBROOK PARK and CRANBROOK PARK&lt;br /&gt;CREEKBEND CT between CUL DE SAC and MEADOWSIDE DR&lt;br /&gt;CRESTLAND DR between HALL AVE and CARHART AVE&lt;br /&gt;CUMBERLAND AVE between HAMPSHIRE RD and CANTERBURY RD&lt;br /&gt;DEVONSHIRE RD between ARLINGTON BLVD and AVON RD&lt;br /&gt;DHU VARREN RD between LESLIE PARK CIR and OMLESAAD DR&lt;br /&gt;DHU VARREN RD between PONTIAC TRL and LESLIE PARK CIR&lt;br /&gt;DONEGAL CT between BRANDYWINE DR and CUL DE SAC&lt;br /&gt;DOUGLAS PARK between DOUGLAS PARK and DOUGLAS PARK&lt;br /&gt;DUNDEE DR between DEAD END and MOREHEAD DR&lt;br /&gt;E ANN ST between N STATE ST and N DIVISION ST&lt;br /&gt;E KINGSLEY ST between DETROIT ST and N DIVISION ST&lt;br /&gt;E LIBERTY ST between S DIVISION ST and S FIFTH AVE&lt;br /&gt;EDDY ST between DEAD END and VERLE AVE&lt;br /&gt;ELI DR between YOST BLVD and LILLIAN RD&lt;br /&gt;ELLSWORTH PARK between ELLSWORTH PARK and ELLSWORTH PARK&lt;br /&gt;EMILY CT between CUL DE SAC and MEADOWSIDE DR&lt;br /&gt;ESCH AVE between PAGE AVE and PINE VALLEY BLVD&lt;br /&gt;FALCON CT between HICKORY POINT DR and CUL DE SAC&lt;br /&gt;FARMERS MARKET between FARMERS MARKET and FARMERS MARKET&lt;br /&gt;FERNDALE PL between HENRY ST and GARDNER AVE&lt;br /&gt;FIFTH ST between W DAVIS AVE and W MADISON ST&lt;br /&gt;FIFTH ST between W JEFFERSON ST and W LIBERTY ST&lt;br /&gt;FIFTH ST between W LIBERTY ST and W JEFFERSON ST&lt;br /&gt;FOUNTAIN ST between W SUMMIT ST and SUNSET RD&lt;br /&gt;FOURTH ST between W LIBERTY ST and W JEFFERSON ST&lt;br /&gt;FRANKLIN BLVD between SNYDER AVE and BIRK AVE&lt;br /&gt;FULLER PARK between FULLER PARK and FULLER PARK&lt;br /&gt;FULLER RD between CEDAR BEND DR and MAIDEN LN&lt;br /&gt;FURSTENBURG NATURE AREA between FURSTENBURG NATURE AREA and FURSTENBURG NATURE AREA&lt;br /&gt;GALLUP PARK between GALLUP PARK and GALLUP PARK&lt;br /&gt;GEDDES AVE between OSWEGO ST and ONONDAGA ST&lt;br /&gt;GEDDES AVE between S HURON PKWY and RIVERVIEW DR&lt;br /&gt;GEORGETOWN BLVD between YORKTOWN DR and YORKTOWN DR&lt;br /&gt;GLAZIER WAY between WOLVERHAMPTON LN and HURON PKWY&lt;br /&gt;GLENWOOD ST between DEXTER AVE and VALLEY DR&lt;br /&gt;GOTT ST between PEARL ST and W SUMMIT ST&lt;br /&gt;GOTT ST between W SUMMIT ST and HISCOCK ST&lt;br /&gt;GRACE ST between WESTWOOD AVE and ALICE ST&lt;br /&gt;GREEN RD between WATERSHED DR and FOX HUNT DR&lt;br /&gt;HAISLEY DR between N MAPLE RD and CARBECK DR&lt;br /&gt;HAZELWOOD AVE between CENTRAL AVE and SUNNYWOOD DR&lt;br /&gt;HEMLOCK DR between CHAMPAGNE DR and SHADOWOOD DR&lt;br /&gt;HEMLOCK DR between SHADOWOOD DR and PLAINVIEW CT&lt;br /&gt;HENRY ST between FERNDALE PL and WESTMINSTER PL&lt;br /&gt;HEWETT DR between REDEEMER AVE and RUSSETT RD&lt;br /&gt;HICKORY POINT DR between OTTER CREEK CT and BIRCHWOOD CT&lt;br /&gt;HILL ST between GREENE ST and S DIVISION ST&lt;br /&gt;HILLDALE DR between BREDE PL and DELAFIELD DR&lt;br /&gt;HOLYOKE LN between NEWPORT RD and LOWELL RD&lt;br /&gt;HUNTINGTON PL between ONAWAY PL and HUNTINGTON DR&lt;br /&gt;HURON HIGHLANDS PARK between HURON HIGHLANDS PARK and HURON HIGHLANDS PARK&lt;br /&gt;INDEPENDENCE BLVD between JAMES ST and VICTORIA AVE&lt;br /&gt;IROQUOIS PARK between IROQUOIS PARK and IROQUOIS PARK&lt;br /&gt;JONES DR between PLYMOUTH RD and BROADWAY ST&lt;br /&gt;KELLY PARK between KELLY PARK and KELLY PARK&lt;br /&gt;KEMPF HOUSE between KEMPF HOUSE and KEMPF HOUSE&lt;br /&gt;KIRTLAND DR between GLEN LEVEN RD and W STADIUM BLVD&lt;br /&gt;LAKEVIEW AVE between W LIBERTY RD and DEAD END&lt;br /&gt;LAWTON PARK between LAWTON PARK and LAWTON PARK&lt;br /&gt;LENNOX ST between CUL DE SAC and ARBORDALE ST&lt;br /&gt;LESLIE SCIENCE CENTER between LESLIE SCIENCE CENTER and LESLIE SCIENCE CENTER&lt;br /&gt;LIBERTY PLAZA between LIBERTY PLAZA and LIBERTY PLAZA&lt;br /&gt;LONG SHORE DR between AMHERST AVE and BARTON DR&lt;br /&gt;LORRAINE ST between FERNWOOD AVE and LA SALLE DR&lt;br /&gt;LOYOLA DR between CUL DE SAC and COLGATE CIR&lt;br /&gt;MARSHALL ST between SPRINGBROOK AVE and VERLE AVE&lt;br /&gt;MARY BETH DOYLE PARK between MARY BETH DOYLE PARK and MARY BETH DOYLE PARK&lt;br /&gt;MARYFIELD DR between PINE RIDGE ST and WESTWOOD AVE&lt;br /&gt;MARYFIELD WILDWOOD PARK between MARYFIELD WILDWOOD PARK and MARYFIELD WILDWOOD PARK&lt;br /&gt;MEADOWSIDE DR between WOODCREEK BLVD and WOODCREEK BLVD&lt;br /&gt;MEDFORD RD between MANCHESTER RD and ST FRANCIS DR&lt;br /&gt;MEDFORD RD between NEEDHAM RD and MANCHESTER RD&lt;br /&gt;MELROSE AVE between BELMONT RD and DEVONSHIRE RD&lt;br /&gt;MERSHON DR between DELAWARE DR and SCIO CHURCH RD&lt;br /&gt;MERSHON DR between HANOVER RD and SCIO CHURCH RD&lt;br /&gt;MERSHON DR between HARTFORD ST and HANOVER RD&lt;br /&gt;MERSHON DR between NORMANDY RD and GLEN LEVEN RD&lt;br /&gt;MERSHON DR between SCIO CHURCH RD and DELAWARE DR&lt;br /&gt;MILLER NATURE AREA between MILLER NATURE AREA and MILLER NATURE AREA&lt;br /&gt;MINER ST between W SUMMIT ST and ELMCREST DR&lt;br /&gt;MOREHEAD DR between NEWBURY CT and PICADILLY CIR&lt;br /&gt;MORTON AVE between WOODSIDE RD and HARDING RD&lt;br /&gt;MT PLEASANT AVE between SUNNYSIDE BLVD and W MADISON ST&lt;br /&gt;N FOURTH AVE between E ANN ST and CATHERINE ST&lt;br /&gt;N FOURTH AVE between E KINGSLEY ST and CATHERINE ST&lt;br /&gt;N MAPLE RD between PAMELA AVE and HOLLYWOOD DR&lt;br /&gt;N REVENA BLVD between LINWOOD AVE and HARBROOKE AVE&lt;br /&gt;NOTTINGHAM RD between MANCHESTER RD and INDEPENDENCE BLVD&lt;br /&gt;OLIVIA AVE between CAMBRIDGE RD and MINERVA RD&lt;br /&gt;OLSON PARK between OLSON PARK and OLSON PARK&lt;br /&gt;ORCHARD HILLS DR between CUL DE SAC and EVERGREEN PL&lt;br /&gt;PARKWOOD AVE between JEANNE ST and FERNWOOD AVE&lt;br /&gt;PEAR ST between APPLE ST and TRAVER ST&lt;br /&gt;PILGRIM PARK between PILGRIM PARK and PILGRIM PARK&lt;br /&gt;PLYMOUTH PARKWAY between PLYMOUTH PARKWAY and PLYMOUTH PARKWAY&lt;br /&gt;POMONA RD between RED OAK RD and LOYOLA DR&lt;br /&gt;REDEEMER AVE between HEWETT DR and RUSSELL RD&lt;br /&gt;REDEEMER AVE between RUSSELL RD and RUSSETT RD&lt;br /&gt;REDWOOD PARK between REDWOOD PARK and REDWOOD PARK&lt;br /&gt;RIVERSIDE PARK between RIVERSIDE PARK and RIVERSIDE PARK&lt;br /&gt;RUNNYMEDE BLVD between COVINGTON DR and SUE PKWY&lt;br /&gt;S ASHLEY ST between W WASHINGTON ST and W HURON ST&lt;br /&gt;S DIVISION ST between E WILLIAM ST and E LIBERTY ST&lt;br /&gt;S FOREST AVE between GRANGER AVE and WELLS ST&lt;br /&gt;S FOURTH AVE between E LIBERTY ST and E WASHINGTON ST&lt;br /&gt;S FOURTH AVE between E MADISON ST and PACKARD ST&lt;br /&gt;S FOURTH AVE between E WASHINGTON ST and E LIBERTY ST&lt;br /&gt;S FOURTH AVE between PACKARD ST and E MADISON ST&lt;br /&gt;S MAPLE RD between DICKEN DR and PAULINE BLVD&lt;br /&gt;SCIO CHURCH RD between GREENVIEW DR and S SEVENTH ST&lt;br /&gt;SECOND ST between W MOSLEY ST and W MADISON ST&lt;br /&gt;SENECA AVE between OSWEGO ST and ONONDAGA ST&lt;br /&gt;SEQUOIA PKWY between N MAPLE RD and PATRICIA AVE&lt;br /&gt;SEQUOIA PKWY between PATRICIA AVE and N MAPLE RD&lt;br /&gt;SHADFORD RD between FERDON RD and HARDING RD&lt;br /&gt;SHADFORD RD between PACKARD ST and BALDWIN AVE&lt;br /&gt;SHADFORD RD between WOODSIDE RD and HARDING RD&lt;br /&gt;SHADOWOOD DR between HEMLOCK DR and CHAMPAGNE DR&lt;br /&gt;SIXTH ST between W MADISON ST and W JEFFERSON ST&lt;br /&gt;SOUTHEAST AREA PARK between SOUTHEAST AREA PARK and SOUTHEAST AREA PARK&lt;br /&gt;SPRING HOLLOW CT between CUL DE SAC and FOXWAY DR&lt;br /&gt;SPRINGBROOK AVE between MARSHALL ST and SHARON DR&lt;br /&gt;SUGARBUSH PARK between SUGARBUSH PARK and SUGARBUSH PARK&lt;br /&gt;SYLVAN PARK between SYLVAN PARK and SYLVAN PARK&lt;br /&gt;TACOMA CIR between KING GEORGE BLVD and KING GEORGE BLVD&lt;br /&gt;THOMAS CT between SUSAN DR and THOMAS CT&lt;br /&gt;TREMONT PL between WALDENWOOD DR and CUL DE SAC&lt;br /&gt;TURNBERRY LN between MONUMENT DR and MONUMENT DR&lt;br /&gt;VERLE AVE between DEAD END and EDDY ST&lt;br /&gt;VERLE AVE between EDDY ST and PLATT RD&lt;br /&gt;VERLE AVE between MARSHALL ST and DEAD END&lt;br /&gt;VERLE AVE between MARSHALL ST and MARSHALL ST&lt;br /&gt;VERLE AVE between PLATT RD and MARSHALL ST&lt;br /&gt;VICTORIA AVE between RIDGE AVE and INDEPENDENCE BLVD&lt;br /&gt;VIRNANKAY CIR between PAULINE BLVD and PAULINE BLVD&lt;br /&gt;W DOBSON PL between CUL DE SAC and WOLVERHAMPTON LN&lt;br /&gt;W JEFFERSON ST between SIXTH ST and FIFTH ST&lt;br /&gt;W SUMMIT ST between GOTT ST and MINER ST&lt;br /&gt;W WASHINGTON ST between S MAIN ST and S ASHLEY ST&lt;br /&gt;WALDENWOOD DR between PENBERTON DR and TREMONT PL&lt;br /&gt;WESTOVER AVE between RHEA ST and PORTER AVE&lt;br /&gt;WHITE OAK DR between ENGLISH OAK DR and NEWPORT RD&lt;br /&gt;WOODCREEK BLVD between CHALMERS DR and MEADOWSIDE DR&lt;br /&gt;WOODCREEK BLVD between MEADOWSIDE DR and CHALMERS DR&lt;br /&gt;WOODDALE CT between CUL DE SAC and WOODCREEK BLVD&lt;br /&gt;WOODDALE CT between WOODCREEK BLVD and CUL DE SAC&lt;br /&gt;YELLOWSTONE DR between YELLOWSTONE DR and BLUETT DR&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>