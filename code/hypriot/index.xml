<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hypriot on Vacuum weblog from Edward Vielmetti</title>
    <link>http://vielmetti.github.io/code/hypriot/</link>
    <description>Recent content in Hypriot on Vacuum weblog from Edward Vielmetti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 Jul 2015 02:18:01 -0400</lastBuildDate>
    <atom:link href="http://vielmetti.github.io/code/hypriot/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Bringing up Node-RED and mosquitto under &#34;docker compose&#34; on a Raspberry Pi</title>
      <link>http://vielmetti.github.io/post/2015/2015-07-13-bringing-up-node-red-and-mosquitto-under-docker-compose-on-a-raspberry-pi/</link>
      <pubDate>Mon, 13 Jul 2015 02:18:01 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-07-13-bringing-up-node-red-and-mosquitto-under-docker-compose-on-a-raspberry-pi/</guid>
      <description>&lt;p&gt;Progress, actually quite a lot of it:&lt;/p&gt;

&lt;p&gt;The problem, neatly stated. Docker is good for bringing up single services (&#34;microservices&#34;), but sometimes your application needs more than one thing running for the whole thing to work. Enter &#34;docker compose&#34;, formerly &#34;fig&#34;, which automates the process of running various Docker commands in the right order with the right arguments all driven from a configuration file. As described by their documentation:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Compose is a tool for defining and running complex applications with Docker. With Compose, you define a multi-container application in a single file, then spin your application up in a single command which does everything that needs to be done to get it running.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The particular task I have in front of me is launching Node-RED and mosquitto (an MQTT broker) together on a Raspberry Pi 2 which is running Hypriot and Docker. Most of the background for &lt;em&gt;why&lt;/em&gt; that&#39;s a relevant task is at this post on Hypriot, &lt;a href=&#34;http://blog.hypriot.com/post/docker-compose-nodejs-haproxy/&#34;&gt;How to use Docker Compose to run complex multi container apps on your Raspberry Pi&lt;/a&gt;, which I dutifully and successfully managed to run all of the examples from. &lt;/p&gt;

&lt;p&gt;Emboldened by this I tried to get Wordpress running with MySQL but got stuck because of a variety of things (not the least of which was some over-enthusiastic documentation that downplayed the complexity of that task, and the lack of a Pi-specific Wordpress Docker images). But having had the taste of what might be I carried on until I managed to get something to work for what I really wanted: Node-RED running alongside mosquitto so that I could have a local MQTT broker to talk to.&lt;/p&gt;

&lt;pre&gt;
nodered:
  image: nieleyde/rpi2-nodered
  command: flows.json
  volumes:
    - /home/pi/node-red:/root/.node-red
  ports: 
    - &#34;1880:1880&#34;
  links:
    - mosquitto

mosquitto:
  image: nieleyde/rpi-mosquitto
  ports:
    - &#34;1883:1883&#34;
&lt;/pre&gt;

&lt;p&gt;Some subtleties to note:&lt;/p&gt;

&lt;p&gt;The nieleyde/rpi2-nodered runs on the Pi 2; there&#39;s a corresponding nieleyde/rpi-nodered for the Pi. Both are ARM images. I haven&#39;t yet tweaked this to run on x86, but if you do, you&#39;ll need to update the &#34;image&#34; stanzas everywhere.&lt;/p&gt;

&lt;p&gt;The &#34;command&#34; and &#34;volumes&#34; stanzas in the nodered configuration serve to make Docker mount a subdirectory on the host machine where the flows.json file is stored; this makes changes to the configuration persistent. If you want a read-only configuration, you&#39;ll need to change this; I haven&#39;t gotten that far yet. It might also make sense to have a data volume container, but again I&#39;m not there yet.&lt;/p&gt;

&lt;p&gt;The &#34;mosquitto&#34; configuration is extremely bare bones and runs the default config, which is wide open. I haven&#39;t gotten far enough to replace the config file with something better, but that&#39;s an obvious next step.&lt;/p&gt;

&lt;p&gt;From within Node-RED you refer to this internal MQTT server at hostname &#34;mosquitto&#34;, port &#34;1883&#34;. If the links stanza was changed to &#34;mqtt&#34; and the mosquitto section was changed to &#34;mqtt&#34; you&#39;d then refer to the MQTT server at hostname &#34;mqtt&#34;.&lt;/p&gt;

&lt;p&gt;For further reading:&lt;/p&gt;

&lt;p&gt;An issue open on Niel Eyde&#39;s rpi-nodered Github, &lt;a href=&#34;https://github.com/nieleyde/rpi-nodered/issues/5&#34;&gt;documentation for how to extend this image with your own nodes and flows&lt;/a&gt;, where I&#39;m working some of this out.&lt;/p&gt;

&lt;p&gt;On the Node-RED Github, &lt;a href=&#34;https://github.com/node-red/node-red/issues/603&#34;&gt;Support for Docker install for Node-RED&lt;/a&gt;, which is epic and helpful in many ways.&lt;/p&gt;

&lt;p&gt;The essential &lt;a href=&#34;http://blog.hypriot.com/&#34;&gt;Hypriot weblog&lt;/a&gt;, specifically the aforementioned &lt;a href=&#34;http://blog.hypriot.com/post/docker-compose-nodejs-haproxy/&#34;&gt;Docker Compose examples&lt;/a&gt; and the &lt;a href=&#34;https://github.com/hypriot/compose&#34;&gt;Hypriot Docker Compose&lt;/a&gt; Github repository.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gogs, a self-hosted Git server</title>
      <link>http://vielmetti.github.io/post/2015/2015-06-27-gogs-a-self-hosted-git-server/</link>
      <pubDate>Sat, 27 Jun 2015 23:06:54 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-06-27-gogs-a-self-hosted-git-server/</guid>
      <description>&lt;p&gt;Gogs is a self-hosted Git server, an alternative to using Github as a for-pay hosted service or Gitlab as another self-hosted system. It&#39;s written in the Go language, and is said to be sparing of system resources.&lt;/p&gt;

&lt;p&gt;&lt;a class=&#34;asset-img-link&#34;  href=&#34;http://vielmetti.typepad.com/.a/6a00d8341c4f1a53ef01b7c7a5b824970b-pi&#34;&gt;&lt;img class=&#34;asset  asset-image at-xid-6a00d8341c4f1a53ef01b7c7a5b824970b img-responsive&#34; style=&#34;width: 600px; display: block; margin-left: auto; margin-right: auto;&#34; alt=&#34;Screen Shot 2015-06-27 at 11.01.35 PM&#34; title=&#34;Screen Shot 2015-06-27 at 11.01.35 PM&#34; src=&#34;http://vielmetti.typepad.com/.a/6a00d8341c4f1a53ef01b7c7a5b824970b-600wi&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I&#39;m building it using Docker on a Raspberry Pi 2, thanks to the folks at Hypriot; the writeup is &lt;a href=&#34;http://blog.hypriot.com/post/run-your-own-github-like-service-with-docker/&#34;&gt;Run your own GitHub-like service with the help of Docker&lt;/a&gt;, and the file on Dockerhub is at &lt;a href=&#34;https://registry.hub.docker.com/u/hypriot/rpi-gogs-raspbian/&#34;&gt;hypriot/rpi-gogs-raspbian&lt;/a&gt;. The install went essentially as described; note that if you are using Avahi to provide a .local name service, you can avoid using IP addresses in configuration files and instead use names like &#34;black-pearl.local&#34; as your hostname.&lt;/p&gt;

&lt;p&gt;Juan B. Rodriguez did a nice writeup of &lt;a href=&#34;http://jbrodriguez.io/gogs-an-alternative-to-gitlab/&#34;&gt;Gogs, an alternative to Gitlab&lt;/a&gt;, again with a Docker based installation description and a nice feature comparison.&lt;/p&gt;

&lt;p&gt;After some poking around with Gogs I noted three substantial limitations, none of which are complete show-stoppers but which collectively give me pause about doing a wholesale replacement of Github with Gogs; and a fourth that gives me hope for some project that might address these issues but which might not end up being called Gogs.&lt;/p&gt;

&lt;p&gt;First, there&#39;s no built-in wiki. I don&#39;t always use a wiki with a Github repository, and when I do I&#39;m not always thrilled by the minimalist features of Github&#39;s wiki, but it&#39;s mighty handy and I miss it right away. Gogs doesn&#39;t have a wiki, and though it&#39;s been an acknowledged issue for a long time it doesn&#39;t seem to have any forward movement.&lt;/p&gt;

&lt;p&gt;Second, there&#39;s no built-in file editor. I&#39;m very used to the workflow where you see a file that has some small problem, you fork the repository right in the editor, type in your fix, save, and submit your patch to the maintainers. It&#39;s a very straightforward way of doing small things efficiently without dropping down to the command line, and the lack of it makes Gogs hard to understand how it would work in a mostly-web world.&lt;/p&gt;

&lt;p&gt;Third, Gogs has a lot of obvious copying from Github, and I&#39;m uncertain about the whole ethos of wholesale replication of documentation. Sometimes there&#39;s not even an effort made to document what the system does and instead there&#39;s just a link to Github documentation. Self-hosted systems should have self-hosted documentation, and even if you&#39;re replicating someone else&#39;s system faithfully you still need to write up your own docs.&lt;/p&gt;

&lt;p&gt;Fourth and finally, Gogs has been forked. &#34;gitea&#34; is &#34;Git with a cup of tea&#34;, and it seems to have a bunch of energy to fix things that the Gogs project is currently lacking. See &lt;a href=&#34;https://github.com/go-gitea/gitea&#34;&gt;the gitea project on Github&lt;/a&gt; and its corresponding &lt;a href=&#34;https://gitter.im/go-gitea/gitea&#34;&gt;gitter chat for gitea&lt;/a&gt;. gitea has not produced a release yet, but when it does I&#39;ll be sure to look for a reasonable packaging of it to try it out.&lt;/p&gt;

&lt;p&gt;All of that said, I&#39;m happy to have found Gogs, and plan to poke through it some more and store some not-very-important files in it for a while until I get some confidence in it. I don&#39;t think it (or gitea) is an instant replacement for my hosted Github service, but for the narrow purpose of holding a private repository beyond what Github provides for its service plan it looks like a reasonable alternative now.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Running Node-RED on a Raspberry Pi with Docker and Hypriot</title>
      <link>http://vielmetti.github.io/post/2015/2015-05-23-running-node-red-on-a-raspberry-pi-with-docker-and-hypriot/</link>
      <pubDate>Sat, 23 May 2015 02:06:33 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-05-23-running-node-red-on-a-raspberry-pi-with-docker-and-hypriot/</guid>
      <description>&lt;p&gt;My goal for the week was to empty out my inbox sufficiently that I would be able to make progress on some programming tasks that are hard to do when there&#39;s distractions. The inbox got all the way down to zero, and that meant that there was a chunk of evening time suitable for hacking. Happy to report that the result of this is Node-RED running on a Raspberry Pi under Docker on top of Hypriot. A word of explanation of how this all works in detail is too much, but here&#39;s where I got the parts.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.hypriot.com/getting-started-with-docker-on-your-arm-device/&#34;&gt;Hypriot&#39;s gettting started guide&lt;/a&gt; brings you up to speed on getting Docker running on your ARM device (e.g. your Raspberry Pi). They have bootable images that you can download and burn to SD card, and from there you load up applications from Docker.&lt;/p&gt;

&lt;p&gt;Hypriot has a &lt;a href=&#34;https://gitter.im/hypriot/talk&#34;&gt;chat window&lt;/a&gt; on Gitter, so you can pop in and there will be occasionally people to assist. Best to do things European time.&lt;/p&gt;

&lt;p&gt;Docker&#39;s &lt;a href=&#34;https://hub.docker.com/&#34;&gt;DockerHub&lt;/a&gt; is a one stop shop for packaged applications. When you&#39;re running on the Pi, you&#39;ll want to seek out versions with &#39;rpi&#39; or &#39;arm&#39; in their names as they have likely been adapted for that system.&lt;/p&gt;

&lt;p&gt;I ended up pulling Niel Eyde&#39;s Raspberry Pi versions of Node-RED from DockerHub as &lt;a href=&#34;https://registry.hub.docker.com/u/nieleyde/rpi-nodered/&#34;&gt;nieleyde/rpi-nodered&lt;/a&gt;. It has all sorts of interesting modules that I had not previously built.&lt;/p&gt;

&lt;p&gt;Node-RED is at 0.10.6 at this writing. Its &lt;a href=&#34;http://nodered.org/docs/hardware/raspberrypi.html&#34;&gt;Raspberry Pi support&lt;/a&gt; includes hardware support using &lt;a href=&#34;http://wiringpi.com/&#34;&gt;WiringPi&lt;/a&gt; to access the GPIO pins. &lt;/p&gt;

&lt;p&gt;Node-RED currently supports Node.JS 0.10. Node.JS and IO.JS have &lt;a href=&#34;http://sdtimes.com/node-js-and-io-js-to-merge-under-node-js-foundation/&#34;&gt;merged forces&lt;/a&gt; after a fork, which means hopefully development will start to be sane again.&lt;/p&gt;

&lt;p&gt;That all said I am not sure I have everything I need yet but as a leap forward it&#39;s pretty good!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>