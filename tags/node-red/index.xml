<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node Red on Vacuum weblog from Edward Vielmetti</title>
    <link>http://vielmetti.github.io/tags/node-red/</link>
    <description>Recent content in Node Red on Vacuum weblog from Edward Vielmetti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Oct 2016 13:15:00 -0400</lastBuildDate>
    
	<atom:link href="http://vielmetti.github.io/tags/node-red/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS IoT to Node-RED</title>
      <link>http://vielmetti.github.io/post/2016/2016-10-11-aws-iot-to-node-red/</link>
      <pubDate>Tue, 11 Oct 2016 13:15:00 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2016/2016-10-11-aws-iot-to-node-red/</guid>
      <description>Duong Dinh Cuong (on Github as cuongquay) has contributed a node for Node-RED that encapsulates the AWS IoT service and allows straightforward communication between the two systems over MQTT.
The node, node-red-contrib-aws-iot-hub, includes support for the message-passing part of AWS IoT using MQTT, allowing you to open a channel to the IoT service and publish or subscribe to message topics. The result is easy integration between the two systems. As a part of this process, the node includes support for AWS certificates that have to be installed &amp;ldquo;just so&amp;rdquo; to allow AWS to trust Node-RED.</description>
    </item>
    
    <item>
      <title>full stack plane spotting and data analysis</title>
      <link>http://vielmetti.github.io/post/2016/2016-07-11-full-stack-plane-spotting/</link>
      <pubDate>Mon, 11 Jul 2016 13:30:00 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2016/2016-07-11-full-stack-plane-spotting/</guid>
      <description>The task at hand is simple. Whenever a particular airplane is visible overhead, send out a tweet with that notice. Don&amp;rsquo;t repeat yourself with this announcement more than twice an hour, but try not to have too much lag in reporting.
The full stack of hardware and software to do this is not particularly complicated to use once you get it all running, but there are a series of issues and observations along the way that add to the complexity.</description>
    </item>
    
    <item>
      <title>Coworking notes at Elixir Vitae</title>
      <link>http://vielmetti.github.io/post/2015/2015-07-21-coworking-notes/</link>
      <pubDate>Tue, 21 Jul 2015 16:57:00 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-07-21-coworking-notes/</guid>
      <description>A productive afternoon with Mohan Kartha in which I opened a great many tabs in Chrome. This bit of writing to close those out. Elixir Vitae is a great spot for writing - lots of quiet noise from the coolers to keep a background hum, and close to the bus station.
 I&amp;rsquo;m sorting out the simplest task that I&amp;rsquo;d like to do with Node-RED, now that I have a Raspberry Pi 2 running it under Docker in a configuration that&amp;rsquo;s reliable enough that it seems like it&amp;rsquo;s stable.</description>
    </item>
    
    <item>
      <title>Bringing up Node-RED and mosquitto under &#34;docker compose&#34; on a Raspberry Pi</title>
      <link>http://vielmetti.github.io/post/2015/2015-07-13-bringing-up-node-red-and-mosquitto-under-docker-compose-on-a-raspberry-pi/</link>
      <pubDate>Mon, 13 Jul 2015 02:18:01 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-07-13-bringing-up-node-red-and-mosquitto-under-docker-compose-on-a-raspberry-pi/</guid>
      <description>Progress, actually quite a lot of it:
The problem, neatly stated. Docker is good for bringing up single services (&#34;microservices&#34;), but sometimes your application needs more than one thing running for the whole thing to work. Enter &#34;docker compose&#34;, formerly &#34;fig&#34;, which automates the process of running various Docker commands in the right order with the right arguments all driven from a configuration file. As described by their documentation:
 Compose is a tool for defining and running complex applications with Docker.</description>
    </item>
    
    <item>
      <title>Running Node-RED on a Raspberry Pi with Docker and Hypriot</title>
      <link>http://vielmetti.github.io/post/2015/2015-05-23-running-node-red-on-a-raspberry-pi-with-docker-and-hypriot/</link>
      <pubDate>Sat, 23 May 2015 02:06:33 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-05-23-running-node-red-on-a-raspberry-pi-with-docker-and-hypriot/</guid>
      <description>My goal for the week was to empty out my inbox sufficiently that I would be able to make progress on some programming tasks that are hard to do when there&#39;s distractions. The inbox got all the way down to zero, and that meant that there was a chunk of evening time suitable for hacking. Happy to report that the result of this is Node-RED running on a Raspberry Pi under Docker on top of Hypriot.</description>
    </item>
    
    <item>
      <title>Just how cold is that window? Winter monitoring with the TI Sensortag, Node-RED, and Freeboard</title>
      <link>http://vielmetti.github.io/post/2015/2015-01-27-just-how-cold-is-that-window-winter-monitoring-with-the-ti-sensortag-node-red-and-freeboard/</link>
      <pubDate>Tue, 27 Jan 2015 22:11:47 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-01-27-just-how-cold-is-that-window-winter-monitoring-with-the-ti-sensortag-node-red-and-freeboard/</guid>
      <description>Our living room has lovely (old) wooden windows. When it&#39;s cold, the windows get cold. Last year we got some lovely thermal curtains to insulate.
I thought I&#39;d use some of the equipment I had to see just how cold the windows were and how much warmer the curtains are to the touch.
The setup:
Macbook Air running OS X 10.9 (Mavericks), Node-RED 0.9.1, Freeboard, TI Sensortag. I&#39;m using RabbitMQ as my MQTT message passing system, but that&#39;s not strictly necessary for this application.</description>
    </item>
    
    <item>
      <title>that new computer smell</title>
      <link>http://vielmetti.github.io/post/2014/2014-09-30-that-new-computer-smell/</link>
      <pubDate>Tue, 30 Sep 2014 14:11:44 +0000</pubDate>
      
      <guid>http://vielmetti.github.io/post/2014/2014-09-30-that-new-computer-smell/</guid>
      <description>I won&#39;t be complaining about a small keyboard or a small screen for a while, but I have a lot of tools to reinstall on a new system.
In order of appearance:
Chrome, first thing. I like Safari enough in a pinch, but when it comes time to sync up my working environment, Chrome is what I need. A bonus on this system is that there&#39;s a working full-screen mode.</description>
    </item>
    
    <item>
      <title>The internet of power outages</title>
      <link>http://vielmetti.github.io/post/2014/2014-06-27-the-internet-of-power-outages/</link>
      <pubDate>Fri, 27 Jun 2014 19:05:33 +0000</pubDate>
      
      <guid>http://vielmetti.github.io/post/2014/2014-06-27-the-internet-of-power-outages/</guid>
      <description>The single most popular page on this web site is the power outage tracking map collection page. It has static copies of samples of power outage maps from utilities around the country, and it gets bunches of hits every single time there&#39;s bad weather - to the extent that I can pretty much tell where there&#39;s bad weather by the outbound clicks on the page.
The page, however, is not fed with live data; it only has static instances of previous maps.</description>
    </item>
    
  </channel>
</rss>