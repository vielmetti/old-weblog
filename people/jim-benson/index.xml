<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jim Benson on Vacuum weblog from Edward Vielmetti</title>
    <link>http://vielmetti.github.io/people/jim-benson/</link>
    <description>Recent content in Jim Benson on Vacuum weblog from Edward Vielmetti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 22 Aug 2015 23:55:00 -0400</lastBuildDate>
    <atom:link href="http://vielmetti.github.io/people/jim-benson/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Using Github Issues and Waffle.io as a personal kanban board</title>
      <link>http://vielmetti.github.io/post/2015/2015-08-22-github-waffle-kanban-board/</link>
      <pubDate>Sat, 22 Aug 2015 23:55:00 -0400</pubDate>
      
      <guid>http://vielmetti.github.io/post/2015/2015-08-22-github-waffle-kanban-board/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been using Github issues to track my personal todo list for quite some
time now, and since November I&amp;rsquo;ve been using Waffle.io to help that process.&lt;/p&gt;

&lt;p&gt;Waffle in this use is a view of a series of queues in my todo list. Most everything
that I&amp;rsquo;m not doing now lives in the &amp;ldquo;backlog&amp;rdquo; queue, which I try to keep to
less than 100 just to keep myself sane. (At more than 100 there&amp;rsquo;s usually a lot
of duplicates; at less than 100 I&amp;rsquo;m probably not acknowledging that there&amp;rsquo;s
something to be done). The &amp;ldquo;Ready&amp;rdquo; and &amp;ldquo;In Progress&amp;rdquo; queues hold no more than
5 tasks apiece, since I want to keep everything in that state visible on
the screen. Finally the &amp;ldquo;Done&amp;rdquo; queue reflects how much work there is that
actually got accomplished over the last week, and I&amp;rsquo;d love to say that was
hovering at about 50 tasks a week though right now it&amp;rsquo;s only at 34.&lt;/p&gt;

&lt;p&gt;Github issues are more than capable of handling a personal todo list - indeed
it has a lot of features that if you tried to use all of them you&amp;rsquo;d quickly
find that too much of your time was perfecting your lists and not enough
time was spent doing things. So the challenge is coming up with a simple
configuration of the system that doesn&amp;rsquo;t ignore what might be done, but that
focuses on what really needs to be done.&lt;/p&gt;

&lt;p&gt;The inspriation for all of this is Jim Benson&amp;rsquo;s &amp;ldquo;Personal Kanban&amp;rdquo;, and his
observation that really the task simplifies down to two rules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Limit work in progress&lt;/li&gt;
&lt;li&gt;Visualize your work&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The rest is merely commentary.&lt;/p&gt;

&lt;p&gt;(Now I get to drag task 3568, &amp;ldquo;Write up use of Waffle for Vacuum blog&amp;rdquo;, into the
&amp;ldquo;Done&amp;rdquo; category, which is kinetically very satisfactory.)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Personal Kanban from Jim Benson and Modus Cooperandi</title>
      <link>http://vielmetti.github.io/post/2010/2010-07-12-personal-kanban-from-jim-benson-and-modus-cooperandi/</link>
      <pubDate>Mon, 12 Jul 2010 21:04:06 +0000</pubDate>
      
      <guid>http://vielmetti.github.io/post/2010/2010-07-12-personal-kanban-from-jim-benson-and-modus-cooperandi/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m reading &lt;a href=&#34;http://personalkanban.com&#34;&gt;PersonalKanban.com&lt;/a&gt;. &amp;nbsp;There are at the simplest only two rules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1. Visualize your work&lt;/li&gt;
&lt;li&gt;2. Limit your work-in-progress&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;to which is added a third, &amp;ldquo;prioritize&amp;rdquo;.  The rest is commentary.&lt;/p&gt;

&lt;p&gt;Jim is good at commentary, so the blog and the rest of the effort
is well worth reading.  Here&amp;rsquo;s Personal Kanban 101 to start.&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/1hsMxDNshy28VZ&#34; width=&#34;425&#34; height=&#34;355&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/ourfounder/personal-kanban-101&#34; title=&#34;Personal Kanban 101&#34; target=&#34;_blank&#34;&gt;Personal Kanban 101&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;//www.slideshare.net/ourfounder&#34; target=&#34;_blank&#34;&gt;Jim Benson&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kanban; or, management by post-it note</title>
      <link>http://vielmetti.github.io/post/2008/2008-03-28-kanban-or-manag/</link>
      <pubDate>Fri, 28 Mar 2008 21:56:52 +0000</pubDate>
      
      <guid>http://vielmetti.github.io/post/2008/2008-03-28-kanban-or-manag/</guid>
      <description>&lt;p&gt;
I wrote a few years back about a &lt;a href=&#34;http://www.flickr.com/photos/jhritz/6225044/&#34;&gt;mini-kanban that John Hritz had put together to remember to refill washer fluid&lt;/a&gt;.  There are a lot of colorful sticky notes around my workplace these days, so I thought I&#39;d read up on how kanban-inspired systems are being used for process management in the software development and other non-manufacturing worlds.
&lt;/p&gt;&lt;p&gt;
Some inspiring examples (with post-its to illustrate):
&lt;/p&gt;&lt;p&gt;
Corey Ladas on &lt;a href=&#34;http://leansoftwareengineering.com/2007/08/29/kanban-systems-for-software-development/&#34;&gt;Kanban systems for software engineering:&lt;/a&gt;
&lt;/p&gt;&lt;blockquote&gt;
A perfect state of flow may be very difficult, or at least uneconomical, to achieve in a robust product development process. But we can get pretty close with a well-tuned kanban pull system. We have managed to combine most of the flexibility of craft production with most of the control of a pipeline. Work-in-process is limited, and cycle time can be managed. Most importantly, it is a highly transparent and repeatable process with all of the right conditions for continuous improvement.
&lt;/blockquote&gt;&lt;p&gt;
oh, wait a second, this is starting to be spooky: &lt;a href=&#34;http://ourfounder.typepad.com/leblog/2008/02/modus-cooperand.html&#34;&gt;Jim Benson&#39;s notes on the new people at his Modus Cooperandi:&lt;/a&gt;
&lt;/p&gt;&lt;blockquote&gt;
Corey Ladas - Corey has been a proponent of iterative and evolutionary design methods since the early 1990â€™s, and was an early practitioner and vocal promoter of Agile methods at Microsoft. Corey began collaborating with David Anderson at Microsoft in 2004, united by a common interest in the application of Lean, Theory of Constraints, and Statistical Process Control methods to software development. In 2007, Corey joined David at Corbis to implement kanban systems for the development of enterprise IT projects.
&lt;/blockquote&gt;&lt;p&gt;
Time to talk to Jim...
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>